{"version":3,"sources":["utils/numFormat.ts","components/Pager/index.tsx","components/Pager/utils/computePage.ts","utils/dateFormat.ts","pages/AlbumDetail/components/Body/components/Comments/components/Comment/index.tsx","hooks/useForceUpdate.ts","pages/MusicDetail/components/Lyrics/index.tsx","pages/MusicDetail/components/Lyrics/hooks/useFocusActiveLyric.ts","network/music/getMusicComments.ts","constants/paging.ts","pages/MusicDetail/components/MusicComments/index.tsx","pages/MusicDetail/components/MusicComments/hooks/useComments.ts","pages/MusicDetail/index.tsx","pages/MusicDetail/hooks/useIsPlaying.ts"],"names":["numFormat","num","parseInt","isNaN","toString","Math","round","Pager","props","total","curPage","page","setPage","totalPage","pages","ceil","Array","from","length","_","i","className","onClick","map","c","dateFormat","date","fmt","onlyUseFormat","Number","Date","now","yesterday","setDate","getDate","diff","getTime","getFullYear","toLocaleDateString","opt","getMonth","getHours","getMinutes","getSeconds","Object","keys","reduce","prevStr","curKey","replace","RegExp","match","padStart","Comment","src","data","user","avatarUrl","alt","nickname","window","location","href","userId","content","beReplied","time","useForceUpdate","useState","set_","forceUpdate","b","Lyric","lyric","PlayingMusicStore","getCurrentTime","marginTop","setMarginTop","useEffect","timer","setInterval","active","reverse","find","l","startSec","ref","offsetTop","clearInterval","useFocusActiveLyric","style","Tag","el","currentTime","getMusicCommentsReq","a","_request","url","musicID","method","res","MusicComments","hotComments","setHotComments","comments","setComments","setTotal","then","useComments","topRef","useRef","comment","commentId","paddingTop","p","current","scrollIntoView","MusicDetail","observer","music","PlayStore","curMusic","isPlaying","audioRef","paused","useIsPlaying","name","ar","join","Img","al","picUrl","id"],"mappings":"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","file":"static/js/6.7a0b00f4.chunk.js","sourcesContent":["/**\r\n * 将数字转化成简短而模糊的表示\\\r\n * 如 123456 => 12万\r\n * @param num\r\n */\r\nexport function numFormat(num: number | string): string {\r\n  if (typeof num === \"string\") num = parseInt(num);\r\n  if (isNaN(num)) return \"\";\r\n  if (num < 1e4) {\r\n    // 9999 以内直接返回\r\n    return num.toString();\r\n  } else if (num < 1e8) {\r\n    // 9, 999, 999 - 9999, 显示 `xx.x万`\r\n    return (Math.round(num / 1e3) / 10).toString() + \"万\";\r\n  } else {\r\n    // xx.x亿\r\n    return (Math.round(num / 1e7) / 10).toString() + \"亿\";\r\n  }\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { computePage } from \"./utils/computePage\";\r\n\r\ntype PagerProps = {\r\n  page: number;\r\n  setPage: (newPage: number) => void;\r\n  totalPage: number;\r\n};\r\n\r\nfunction Pager(props: PagerProps) {\r\n  const { page, setPage, totalPage } = props;\r\n\r\n  const pages = computePage(totalPage, page);\r\n\r\n  if (totalPage < 2) return null;\r\n\r\n  return (\r\n    <div className=\"c-pager\">\r\n      <div\r\n        className={`c-pager-prev c-pager-item ${page === 1 ? \"disabled\" : \"\"}`}\r\n        onClick={() => setPage(page - 1)}\r\n      >\r\n        {\"<\"}\r\n      </div>\r\n\r\n      {pages.map((c, i) => (\r\n        <div\r\n          key={i}\r\n          className={`c-pager-item ${c === page ? \"active\" : \"\"}`}\r\n          onClick={() => c !== \"...\" && setPage(c)}\r\n        >\r\n          {c}\r\n        </div>\r\n      ))}\r\n\r\n      <div\r\n        className={`c-pager-next c-pager-item ${\r\n          page === Math.ceil(totalPage) ? \"disabled\" : \"\"\r\n        }`}\r\n        onClick={() => setPage(page + 1)}\r\n      >\r\n        {\">\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pager;\r\n","export type HideChar = \"...\";\r\n\r\nexport function computePage(\r\n  total: number,\r\n  curPage: number\r\n): (HideChar | number)[] {\r\n  total = Math.ceil(total);\r\n\r\n  if (total < 11) return Array.from({ length: total }, (_, i) => i + 1);\r\n\r\n  if (curPage <= 8) return [1, 2, 3, 4, 5, 6, 7, 8, 9, \"...\", total];\r\n  if (curPage >= total - 8)\r\n    return [\r\n      1,\r\n      \"...\",\r\n      total - 9,\r\n      total - 8,\r\n      total - 7,\r\n      total - 6,\r\n      total - 5,\r\n      total - 4,\r\n      total - 3,\r\n      total - 2,\r\n      total - 1,\r\n      total,\r\n    ];\r\n\r\n  return [\r\n    1,\r\n    \"...\",\r\n    ...Array.from({ length: 7 }, (_, i) => curPage - 3 + i),\r\n    \"...\",\r\n    total,\r\n  ];\r\n}\r\n","/**\r\n * ## 将给定时间转换为 fmt 指定的格式化字符串\r\n * @param date Date 对象或 string/number 类型 毫秒/秒 时间戳(内部有归一化操作)\r\n * @param fmt 需要转化的字符串, 参考 https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/format-datetimefunction\r\n * @param onlyUseFormat 是否只进行给定时间格式的转化, 若为false, 则可能会返回\"刚刚\"或\"xx分钟前\"\r\n * @returns 格式化字符串\r\n */\r\nexport function dateFormat(\r\n  date: Date | number | string,\r\n  fmt = \"YYYY/mm/dd HH:MM\",\r\n  onlyUseFormat = false\r\n) {\r\n  // 归一化为 Date 对象\r\n  if (typeof date === \"string\") {\r\n    date = Number(date.length < 13 ? date + \"000\" : date);\r\n  }\r\n  if (typeof date === \"number\") {\r\n    date = new Date(date < 1000000000000 ? date * 1000 : date);\r\n  }\r\n\r\n  const now = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(now.getDate() - 1);\r\n\r\n  if (!onlyUseFormat) {\r\n    const diff = (now.getTime() - date.getTime()) / (1000 * 60); // min\r\n    if (diff < 1) {\r\n      // 1 min 以内\r\n      return \"刚刚\";\r\n    } else if (diff < 59) {\r\n      // 59 min 内\r\n      return `${Math.round(diff)} 分钟前`;\r\n    }\r\n\r\n    if (now.getFullYear() === date.getFullYear()) {\r\n      // 今年\r\n      if (now.toLocaleDateString() === date.toLocaleDateString()) {\r\n        // 今天内\r\n        fmt = `今天 HH:MM`;\r\n      } else if (yesterday.toLocaleDateString() === date.toLocaleDateString()) {\r\n        // 昨天\r\n        fmt = `昨天 HH:MM`;\r\n      } else {\r\n        fmt = \"mm/dd HH:MM\";\r\n      }\r\n    } else {\r\n      // 去年\r\n      fmt = \"YYYY/mm/dd HH:MM\";\r\n    }\r\n  }\r\n\r\n  const opt: Record<string, string> = {\r\n    \"Y+\": date.getFullYear().toString(), // 年\r\n    \"m+\": (date.getMonth() + 1).toString(), // 月\r\n    \"d+\": date.getDate().toString(), // 日\r\n    \"H+\": date.getHours().toString(), // 时\r\n    \"M+\": date.getMinutes().toString(), // 分\r\n    \"S+\": date.getSeconds().toString(), // 秒\r\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n  };\r\n\r\n  return Object.keys(opt).reduce(\r\n    (prevStr, curKey) =>\r\n      prevStr.replace(new RegExp(`(${curKey})`, \"g\"), (match) =>\r\n        opt[curKey].padStart(match.length, \"0\")\r\n      ),\r\n    fmt\r\n  );\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport Img from \"../../../../../../../../components/Img\";\r\nimport { SingleComment } from \"../../../../../../../../models/Comments\";\r\nimport { dateFormat } from \"../../../../../../../../utils/dateFormat\";\r\n\r\ntype commentProps = {\r\n  data: SingleComment;\r\n};\r\n\r\nfunction Comment(props: commentProps) {\r\n  return (\r\n    <div className=\"album_detail-body-comments-item\">\r\n      <Img\r\n        src={props.data.user.avatarUrl}\r\n        alt={props.data.user.nickname}\r\n        className=\"album_detail-body-comments-item-avatar\"\r\n        onClick={() => {\r\n          window.location.href = `/user-detail?uid=${props.data.user.userId}`;\r\n        }}\r\n      />\r\n      <div className=\"album_detail-body-comments-item-body\">\r\n        <div className=\"album_detail-body-comments-item-body-upper\">\r\n          <span\r\n            className=\"album_detail-body-comments-item-body-upper-nick_name\"\r\n            onClick={() => {\r\n              window.location.href = `/user-detail?uid=${props.data.user.userId}`;\r\n            }}\r\n          >\r\n            {props.data.user.nickname + \":\"}\r\n          </span>\r\n          <span className=\"album_detail-body-comments-item-body-upper-content\">\r\n            {props.data.content}\r\n          </span>\r\n        </div>\r\n        {props.data.beReplied.length !== 0 ? (\r\n          <div className=\"album_detail-body-comments-item-body-replied\">\r\n            <span\r\n              className=\"album_detail-body-comments-item-body-replied-name\"\r\n              onClick={() => {\r\n                window.location.href = `/user-detail?uid=${props.data.beReplied[0].user.userId}`;\r\n              }}\r\n            >\r\n              @{props.data.beReplied[0].user.nickname}：\r\n            </span>\r\n            <span className=\"album_detail-body-comments-item-body-replied-content\">\r\n              {props.data.beReplied[0].content}\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"album_detail-body-comments-item-body-date\">\r\n          {dateFormat(props.data.time)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import { useState } from \"react\";\r\n\r\nexport function useForceUpdate() {\r\n  const [_, set_] = useState(false);\r\n\r\n  function forceUpdate() {\r\n    set_((b) => !b);\r\n  }\r\n\r\n  return { forceUpdate };\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { PlayingMusicStore } from \"../../../../mobx/playingMusic\";\r\nimport { Lyric as LyricType } from \"../../../../models/lyric\";\r\nimport { useFocusActiveLyric } from \"./hooks/useFocusActiveLyric\";\r\n\r\ntype LyricProps = {\r\n  lyric: LyricType[];\r\n};\r\n\r\nfunction Lyric(props: LyricProps) {\r\n  const { lyric } = props;\r\n  const time = PlayingMusicStore.getCurrentTime();\r\n\r\n  const { marginTop } = useFocusActiveLyric(lyric);\r\n\r\n  return (\r\n    <div className=\"lyric\">\r\n      <div className=\"lyric-scroll-wrap\">\r\n        <div className=\"lyric-mask top\"></div>\r\n        <div className=\"lyric-warp\" style={{ marginTop }}>\r\n          {lyric.map((l, i) => {\r\n            if (!l.content) return null;\r\n            const Tag = l.startSec <= time ? \"section\" : \"div\";\r\n            return (\r\n              <Tag\r\n                className={`lyric-item`}\r\n                key={l.startSec * 100 + i}\r\n                ref={(el) => (l.ref = el)}\r\n                onClick={() => (PlayingMusicStore.currentTime = l.startSec)}\r\n              >\r\n                {l.content}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"lyric-mask bottom\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lyric;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { useForceUpdate } from \"../../../../../hooks/useForceUpdate\";\r\nimport { PlayingMusicStore } from \"../../../../../mobx/playingMusic\";\r\nimport { Lyric } from \"../../../../../models/lyric\";\r\n\r\nexport function useFocusActiveLyric(lyric: Lyric[]) {\r\n  const [marginTop, setMarginTop] = useState(0);\r\n\r\n  const { forceUpdate } = useForceUpdate();\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const time = PlayingMusicStore.getCurrentTime();\r\n\r\n      const active = [...lyric].reverse().find((l) => l.startSec <= time);\r\n\r\n      forceUpdate();\r\n      if (!active || !active.ref) return;\r\n\r\n      setMarginTop(-active.ref.offsetTop);\r\n    }, 500);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [lyric]);\r\n\r\n  return { marginTop };\r\n}\r\n","import { PER_PAGE } from \"../../constants/paging\";\r\nimport { Comments } from \"../../models/Comments\";\r\nimport _request from \"../_request\";\r\n\r\nexport type GetMusicCommentsReqData = {\r\n  page: number;\r\n  musicID: number;\r\n};\r\n\r\n/**\r\n * 获得歌曲的评论\r\n * @returns\r\n */\r\nexport async function getMusicCommentsReq(data: GetMusicCommentsReqData) {\r\n  const res = await _request<Comments>({\r\n    url: `/comment/music?id=${data.musicID}&limit=${PER_PAGE}&offset=${\r\n      (data.page - 1) * PER_PAGE\r\n    }`,\r\n    method: \"GET\",\r\n  });\r\n\r\n  if (!res || typeof res.total !== \"number\") return null;\r\n\r\n  return res;\r\n}\r\n","export const PER_PAGE = 14;\r\n","import \"./index.scss\";\r\n\r\nimport { useRef } from \"react\";\r\n\r\nimport Pager from \"../../../../components/Pager\";\r\nimport { PER_PAGE } from \"../../../../constants/paging\";\r\nimport { numFormat } from \"../../../../utils/numFormat\";\r\nimport CommentItem from \"../../../AlbumDetail/components/Body/components/Comments/components/Comment\";\r\nimport { useComments } from \"./hooks/useComments\";\r\n\r\ntype MusicCommentsProps = {\r\n  musicID: number;\r\n};\r\n\r\nfunction MusicComments(props: MusicCommentsProps) {\r\n  const { musicID } = props;\r\n  const { setPage, comments, hotComments, page, total } = useComments(musicID);\r\n\r\n  const topRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  return (\r\n    <div className=\"music_comments\">\r\n      {hotComments && hotComments.length && (\r\n        <>\r\n          <h3>热评</h3>\r\n          {hotComments.map((comment) => (\r\n            <CommentItem data={comment} key={comment.commentId}></CommentItem>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      {comments && (\r\n        <>\r\n          <h3 style={{ marginTop: \"-60px\", paddingTop: \"80px\" }} ref={topRef}>\r\n            歌曲评论({numFormat(total)})\r\n          </h3>\r\n          {comments.map((comment) => (\r\n            <CommentItem data={comment} key={comment.commentId}></CommentItem>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      <Pager\r\n        page={page}\r\n        setPage={(p) => {\r\n          setPage(p);\r\n          topRef.current && topRef.current.scrollIntoView();\r\n        }}\r\n        totalPage={total / PER_PAGE}\r\n      ></Pager>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MusicComments;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { SingleComment } from \"../../../../../models/Comments\";\r\nimport { getMusicCommentsReq } from \"../../../../../network/music/getMusicComments\";\r\n\r\nexport function useComments(musicID: number) {\r\n  const [hotComments, setHotComments] = useState<SingleComment[] | null>(null);\r\n  const [comments, setComments] = useState<SingleComment[] | null>(null);\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getMusicCommentsReq({ page, musicID }).then((res) => {\r\n      if (!res) return;\r\n\r\n      setComments(res.comments);\r\n      setTotal(res.total);\r\n      setHotComments(res.hotComments);\r\n    });\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    getMusicCommentsReq({ page: 1, musicID }).then((res) => {\r\n      if (!res) return;\r\n\r\n      setHotComments(res.hotComments);\r\n      setComments(res.comments);\r\n      setTotal(res.total);\r\n      setPage(1);\r\n    });\r\n  }, [musicID]);\r\n\r\n  return { hotComments, comments, setPage, total, page };\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Img from \"../../components/Img\";\r\nimport { useForceUpdate } from \"../../hooks/useForceUpdate\";\r\nimport { PlayStore } from \"../../mobx/play\";\r\nimport { PlayingMusicStore } from \"../../mobx/playingMusic\";\r\nimport Lyric from \"./components/Lyrics\";\r\nimport MusicComments from \"./components/MusicComments\";\r\nimport { useIsPlaying } from \"./hooks/useIsPlaying\";\r\n\r\n// type MusicDetailProps = {\r\n// };\r\n\r\nfunction _MusicDetail(/* props: MusicDetailProps */) {\r\n  // const {} = props;\r\n  const music = PlayStore.curMusic;\r\n\r\n  const { isPlaying } = useIsPlaying();\r\n\r\n  return (\r\n    <div className=\"music_detail\">\r\n      <div className=\"music_detail-title\">\r\n        <div className=\"music_detail-title-music_name\">{music.name}</div>\r\n        <div className=\"music_detail-title-artist_name\">\r\n          {music.ar.map((ar) => ar.name).join(\"/\")}\r\n        </div>\r\n      </div>\r\n      <div className=\"music_detail-song\">\r\n        <div className=\"music_detail-song-disc\">\r\n          <div\r\n            className={`music_detail-song-disc-cover ${\r\n              isPlaying ? \"\" : \"paused\"\r\n            }`}\r\n          >\r\n            <Img\r\n              src={music.al.picUrl}\r\n              className=\"music_detail-song-disc-cover-img\"\r\n              alt={music.al.name}\r\n            ></Img>\r\n          </div>\r\n        </div>\r\n\r\n        <Lyric lyric={PlayingMusicStore.lyric}></Lyric>\r\n      </div>\r\n\r\n      <MusicComments musicID={music.id}></MusicComments>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MusicDetail = observer(_MusicDetail);\r\n\r\nexport default MusicDetail;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { useForceUpdate } from \"../../../hooks/useForceUpdate\";\r\nimport { PlayingMusicStore } from \"../../../mobx/playingMusic\";\r\n\r\nexport function useIsPlaying() {\r\n  const { forceUpdate } = useForceUpdate();\r\n  useEffect(() => {\r\n    const timer = setInterval(forceUpdate, 500);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const isPlaying = !(\r\n    PlayingMusicStore.audioRef && PlayingMusicStore.audioRef.paused\r\n  );\r\n\r\n  return { isPlaying };\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/Music.ts","network/_request.ts","utils/showToast.ts","network/music/getMusicUrl.ts","utils/play/initPlayState.ts","mobx/play.ts","mobx/self.ts","components/Img/components/LoadingNote/index.tsx","components/Img/index.tsx","network/music/getMusicLyric.ts","utils/lyricStr2LyricItem.ts","mobx/playingMusic.ts","mobx/index.ts","utils/notImplemented.ts","components/TheAsideBar/components/PlayListItem/index.tsx","components/TheAsideBar/img/cloud.svg","components/TheAsideBar/img/download.svg","components/TheAsideBar/img/fm.svg","components/TheAsideBar/data/myMusic.ts","components/TheAsideBar/img/recentMusic.svg","components/TheAsideBar/img/star.svg","components/TheAsideBar/data/tabs.ts","components/TheAsideBar/img/left.svg","components/TheAsideBar/img/playList.svg","components/TheAsideBar/index.tsx","constants/mediaQuery.ts","components/AlbumBrief/index.tsx","components/TheMusicPlayer/components/ImgComp/ImgVolumeMute.tsx","components/TheMusicPlayer/components/ImgComp/ImgVolume.tsx","components/TheMusicPlayer/components/ImgComp/ImgRand.tsx","components/TheMusicPlayer/components/ImgComp/ImgPrev.tsx","components/TheMusicPlayer/components/ImgComp/ImgPlayList.tsx","components/TheMusicPlayer/components/ImgComp/ImgPlay.tsx","components/TheMusicPlayer/components/ImgComp/ImgPaused.tsx","components/TheMusicPlayer/components/ImgComp/ImgNormal.tsx","components/TheMusicPlayer/components/ImgComp/ImgLoop.tsx","components/TheMusicPlayer/components/ImgComp/ImgLast.tsx","components/TheMusicPlayer/index.tsx","components/TheMusicPlayer/hooks/useIsPlaying.ts","components/TheMusicPlayer/hooks/useCurrentTime.ts","components/TheMusicPlayer/hooks/useMuted.ts","components/TheMusicPlayer/hooks/useVolume.ts","components/TheMusicPlayer/hooks/useColor.ts","components/TheToasts/index.tsx","img/logo.svg","components/TheTopBar/components/DialogLogin/hooks/useForm.ts","network/user/login.ts","components/TheTopBar/components/DialogLogin/index.tsx","components/TheTopBar/components/DialogLogin/hooks/useLogin.ts","components/TheTopBar/images/logo.svg","components/TheTopBar/components/Logo/Logo.tsx","components/TheTopBar/images/toLeft.svg","components/TheTopBar/images/toRight.svg","components/TheTopBar/components/PageChanger/PageChanger.tsx","components/TheTopBar/images/search.svg","components/TheTopBar/images/trashBin.svg","components/TheTopBar/components/History/index.tsx","network/hotList/getHotList.ts","components/TheTopBar/components/HotListItem/index.tsx","components/TheTopBar/components/HotList/index.tsx","components/TheTopBar/components/Dropdown/index.tsx","components/TheTopBar/components/SearchBar/index.tsx","components/TheTopBar/hooks/useShowDropDown.ts","mobx/thetopbar.ts","components/TheTopBar/components/ThemeBtn/ThemeBtn.tsx","components/TheTopBar/images/user.svg","components/TheTopBar/index.tsx","components/TheTopBar/hooks/useShowDialogLogin.ts","network/user/getUserByCookie.ts","hooks/useSelf.ts","routes/index.ts","App.tsx","index.tsx","constants/localStorageKey.ts","mobx/toasts.ts","utils/scheduler.ts","utils/timeFormat.ts","constants/cookie.ts","components/TheAsideBar/hooks/useUserPlayLists.ts","network/user/getUserPlayLists.ts","network/playList/populateTracks.ts","network/playList/getPlayList.ts"],"names":["PlayMode","defaultMusic","id","url","name","ar","dt","al","picUrl","publishTime","Date","now","alia","SERVER_BASE_URL","DEFAULT_ERR_MSG","_request","config","a","shouldShowHint","instance","axios","create","baseURL","timeout","request","res","status","data","code","msg","console","error","err","errMsg","isAxiosError","axiosErr","response","Error","message","showToast","value","severity","ToastsStore","addToast","getMusicUrlReq","params","method","length","defaultLocalPlayState","curMusicId","curPlayListID","curPlayMode","NORMAL","KEY","loadLocal","localData","localStorage","getItem","playState","JSON","parse","savePlayStateToLocal","partOfState","oldState","newState","setItem","stringify","setMusicScheduler","Scheduler","PlayState","curMusic","tracks","playMode","randTrack","playlistID","makeAutoObservable","this","setPlayListNMusic","list","map","m","i","temp","randIndex","Math","floor","random","add","_setCurMusic","find","curMusicFull","PlayingMusicStore","setLyric","direction","leap","RAND","curIndex","findIndex","nextInd","toSet","t","setCurMusic","switchMusic","playlist","musicID","force","getPlayListReq","fullPlaylist","trackIds","resetRandList","musics","LOOP","PlayStore","SelfStore","self","LoadingNote","useMemo","className","viewBox","version","xmlns","width","height","d","fill","Img","props","src","imgClassName","alt","loadingMask","containerProps","useState","isLoading","setIsLoading","memoImg","onLoad","getMusicLyricReq","lrc","lyric","reg","PlayingMusicState","_audioRef","ref","audioRef","round","currentTime","time","lyricStr","str","split","line","exec","min","sec","content","startSec","parseInt","filter","l","configure","enforceActions","notImplemented","PlayListItem","icon","onClick","myMusic","downloadIcon","cloudIcon","fmIcon","tabs","TheAsideBar","observer","tabSelected","setTabSelected","asideBarShrink","setAsideBarShrink","useUserPlayLists","createPlayLists","starPlayLists","createListHidden","setCreateListHidden","starListHidden","setStarListHidden","isSmall","useWindowSize","useEffect","leftIcon","tab","myMusicItem","playListIcon","AlbumBrief","music","imgRef","artist","join","ImgVolumeMute","color","ImgVolume","ImgRand","ImgPrev","ImgPlayList","ImgPlay","ImgPaused","ImgNormal","ImgLoop","ImgNext","TheMusicPlayer","history","useHistory","curAudioEl","isPlaying","setIsPlaying","play","pause","togglePlaying","p","useIsPlaying","_setForUpdate","forceUpdate","b","getCurrentTime","setCurrentTime","currentSrc","timer","setInterval","duration","then","clearInterval","percent","slideRef","useRef","handleMouseEvent","e","current","rect","getBoundingClientRect","clientX","left","useCurrentTime","muted","setMuted","toggleMuted","useMuted","volume","setVolume","volumeSlideRef","handleVolumeMouseEvent","bottom","clientY","useVolume","albumUrl","bgc","colors","setColors","imgEl","extractor","ColorExtractor","compresionRate","extractColor","chooseReadableColor","useColor","style","background","autoPlay","el","push","switchPlayMode","transform","timeFormat","onMouseDown","preventDefault","stopPropagation","document","addEventListener","removeEventListener","once","TheToasts","toasts","toast","initialForm","phone","password","loginReq","DialogLogin","close","form","_setForm","formHint","setFormHint","setForm","key","newForm","checkForm","test","passwordFilter","replace","numberTest","Number","clearHint","phoneHint","passwordHint","useForm","login","userInfo","profile","window","COOKIE","cookie","useLogin","onKeyDown","logoIcon","type","placeholder","onChange","target","onBlur","onFocus","maxLength","Logo","logo","PageChanger","go","toLeft","toRight","History","trashBin","HotListItem","HotListItemData","HotListItemIndex","index","searchWord","iconType","iconUrl","score","HotList","setData","getHotList","item","Dropdown","SearchBar","showDropDown","setShowDropDown","closeDropDown","useShowDropDown","search","themeKey","TheTopbarStore","searchDpShown","loginDpShown","loginTgShown","lgTermsAgreed","LDTClassName","theme","toggleSetTheme","TheTopBar","showDialogLogin","setShowDialogLogin","closeDialog","useShowDialogLogin","location","href","userId","avatarUrl","avatarPlaceholder","nickname","getUserByCookieReq","encodeURIComponent","saveSelfInfo","info","routes","path","component","loadable","exact","App","to","route","ReactDOM","render","StrictMode","getElementById","curId","setTimeout","toSplice","splice","maxTaskCount","onGoing","tasks","task","thisTaskIsDone","Promise","resolve","reject","catch","finally","executeNext","fn","seconds","toString","padStart","minutes","hours","enCookie","playLists","setPlayLists","getUserPlayLists","getUserPlayListsReq","uid","scheduler","_getUserPlayListsReq","limit","BATCH_SIZE","populateTracksReq","ids","idBatches","slice","promises","idBatch","all","results","returnArr","songs","playListFull"],"mappings":"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","file":"static/js/main.b16a2f8d.chunk.js","sourcesContent":["export type MusicID = number;\r\n/**\r\n * 歌曲简略信息, 请求 `/playlist/detail` 的 track 中是这个数据\r\n */\r\nexport type MusicBrief = {\r\n  name: string;\r\n  id: MusicID;\r\n  /** artists */\r\n  ar: {\r\n    id: number;\r\n    name: string;\r\n  }[];\r\n};\r\n\r\n/**\r\n * 歌手信息\r\n */\r\nexport type MusicAr = {\r\n  name: string;\r\n};\r\n\r\n/**\r\n * 歌曲详细信息, 请求 `/song/detail` 得到\r\n */\r\nexport type MusicDetail = {\r\n  /** album */\r\n  al: {\r\n    id: number;\r\n    name: string;\r\n    picUrl: string;\r\n  };\r\n  /** 歌曲时长, ms */\r\n  dt: number;\r\n  /** 歌曲出处(描述性文字) */\r\n  alia: string[];\r\n  /** 作者 */\r\n  ar: MusicAr[];\r\n  publishTime: number;\r\n} & MusicBrief;\r\n\r\n/**\r\n * music and url\\\r\n * 歌曲完整信息, 请求 `/song/url` 得到\r\n */\r\n\r\nexport type MusicNUrl = {\r\n  url?: string;\r\n} & MusicDetail;\r\n\r\nexport const defaultMusic: MusicNUrl = {\r\n  // al: {\r\n  //   id: 0,\r\n  //   name: \"\",\r\n  //   picUrl: \"\",\r\n  // },\r\n  // ar: [\r\n  //   {\r\n  //     id: 0,\r\n  //     name: \"\",\r\n  //   },\r\n  // ],\r\n  // id: 0,\r\n  // name: \"\",\r\n  // publishTime: 0,\r\n  // size: 0,\r\n  // type: \"\",\r\n  // url: \"\",\r\n\r\n  id: 0,\r\n  url: \"\",\r\n  name: \"\",\r\n  ar: [\r\n    {\r\n      id: 0,\r\n      name: \"\",\r\n    },\r\n  ],\r\n  dt: 0,\r\n  al: {\r\n    id: 0,\r\n    name: \"\",\r\n    picUrl: \"\",\r\n  },\r\n\r\n  publishTime: Date.now(),\r\n  alia: [],\r\n};\r\n\r\nexport enum PlayMode {\r\n  LOOP,\r\n  NORMAL,\r\n  RAND,\r\n}\r\n\r\n/**\r\n * 调用`/recommend/resource`接口获得的音乐数据\r\n */\r\nexport type RecommendedPlaylist = {\r\n  id: number;\r\n  type: 1;\r\n  /** 例子: \"这些充满『强烈画面感』的音乐\"; */\r\n  name: string;\r\n  /** 例子: \"根据你喜欢的单曲《通天大道宽又阔》推荐\"; */\r\n  copywriter: string;\r\n  picUrl: string;\r\n  playcount: number;\r\n  /** ms 时间戳 */\r\n  createTime: number;\r\n  trackCount: 462;\r\n};\r\n","import axios, { AxiosError, AxiosRequestConfig } from \"axios\";\r\n\r\nimport { showToast } from \"../utils/showToast\";\r\n\r\n// import { nanoid } from \"@reduxjs/toolkit\";\r\n\r\n// import { store } from \"../../redux/store\";\r\n// import { addToast, removeToast } from \"../../redux/toasts/toastsSlice\";\r\n// import { responseType } from \"./responseType\";\r\n\r\nconst SERVER_BASE_URL = \"http://api.xiong35.cn/netease\";\r\n\r\n/**\r\n * 失败会返回200以外的http状态码\r\n */\r\ntype BaseHttpInfo = {\r\n  /**\r\n   * 错误提示信息, 出现错误时直接使用即可\r\n   */\r\n  msg?: string;\r\n  code: number;\r\n};\r\n\r\nconst DEFAULT_ERR_MSG = \"出错了！\";\r\n\r\nexport default async function _request<T = {}>(\r\n  config: AxiosRequestConfig,\r\n  shouldShowHint = true\r\n) {\r\n  const instance = axios.create({\r\n    baseURL: SERVER_BASE_URL,\r\n    timeout: 60000,\r\n    // withCredentials: true,\r\n  });\r\n\r\n  try {\r\n    /** 执行请求 */\r\n    const res = await instance.request<T & BaseHttpInfo>(config);\r\n    if (res.status === 200 && res.data && res.data.code === 200) {\r\n      /**\r\n       * 请求成功网易云会在 body 里返回 `code: 200`\r\n       */\r\n      return res.data;\r\n    } else if (!res.data) {\r\n      /**\r\n       * 请求没有消息体(可能是请求都没达到后端)\r\n       */\r\n      throw DEFAULT_ERR_MSG;\r\n    } else {\r\n      /**\r\n       * 其他情况(后端正常的报错)\r\n       */\r\n      throw res.data.msg || DEFAULT_ERR_MSG;\r\n    }\r\n  } catch (err) {\r\n    console.error(\"in request: \", { config, err });\r\n\r\n    let errMsg = DEFAULT_ERR_MSG;\r\n    if (typeof err === \"string\") {\r\n      /** 我自己 throw 的 error */\r\n      errMsg = err;\r\n    } else if ((err as AxiosError).isAxiosError) {\r\n      /** http 状态码不为 200 */\r\n      const axiosErr = err as AxiosError<BaseHttpInfo>;\r\n      if (axiosErr.response) {\r\n        errMsg = axiosErr.response.data.msg || DEFAULT_ERR_MSG;\r\n      }\r\n    } else if (err instanceof Error) {\r\n      /** 其他错误 */\r\n      errMsg = err.message;\r\n    }\r\n\r\n    /** 可能有个别请求不需要弹出提示 */\r\n    shouldShowHint && showToast(errMsg, \"error\");\r\n\r\n    /** 错误一律返回 null */\r\n    return null;\r\n  }\r\n}\r\n","/**\r\n * 展示一个 toast\r\n * @param msg 展示的祖字符串\r\n * @param type toast 类型\r\n * - success: 成功, 绿色 toast\r\n * - warning: 警告, 黄色 toast\r\n * - error: 失败, 红色 toast\r\n * - info: 信息, 蓝色 toast\r\n */\r\n\r\nimport { ToastsStore } from \"../mobx/toasts\";\r\nimport { Toast } from \"../models/Toast\";\r\n\r\nexport const showToast = (value: string, severity: Toast[\"severity\"]) => {\r\n  ToastsStore.addToast(value, severity);\r\n};\r\n","import { MusicID } from \"../../models/Music\";\r\nimport _request from \"../_request\";\r\n\r\nexport type GetMusicUrlReqData = {\r\n  id: MusicID;\r\n};\r\n\r\n/**\r\n * 根据传入 id 获得一首歌资源的 url\r\n * @returns url 或 null\r\n */\r\nexport async function getMusicUrlReq(\r\n  params: GetMusicUrlReqData\r\n): Promise<string | null> {\r\n  const res = await _request<{\r\n    data: {\r\n      url: string;\r\n    }[];\r\n  }>({\r\n    url: \"/song/url\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n\r\n  if (!res || !res.data || !res.data.length) return null;\r\n\r\n  return res.data[0].url;\r\n}\r\n","import { PlayMode } from \"../../models/Music\";\r\n\r\nexport function initPlayState() {\r\n  return loadLocal();\r\n}\r\n\r\ntype LocalPlayState = {\r\n  curMusicId: number;\r\n  curPlayListID: number;\r\n  curPlayMode: PlayMode;\r\n};\r\n\r\nconst defaultLocalPlayState: LocalPlayState = {\r\n  curMusicId: 1338149101,\r\n  curPlayListID: 2839545331,\r\n  curPlayMode: PlayMode.NORMAL,\r\n};\r\n\r\nconst KEY = \"netease-f-play_state\";\r\n\r\nfunction loadLocal() {\r\n  const localData = localStorage.getItem(KEY);\r\n  if (!localData) {\r\n    return defaultLocalPlayState;\r\n  } else {\r\n    const playState = JSON.parse(localData as string) as LocalPlayState;\r\n\r\n    if (playState.curMusicId && playState.curPlayListID) return playState;\r\n    else return defaultLocalPlayState;\r\n  }\r\n}\r\n\r\nexport function savePlayStateToLocal(partOfState: Partial<LocalPlayState>) {\r\n  const oldState = loadLocal();\r\n\r\n  const newState = { ...oldState, ...partOfState };\r\n\r\n  localStorage.setItem(KEY, JSON.stringify(newState));\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nimport { defaultMusic, MusicDetail, MusicID, MusicNUrl, PlayMode } from \"../models/Music\";\r\nimport { PlayList, PlayListID } from \"../models/PlayList\";\r\nimport { getMusicUrlReq } from \"../network/music/getMusicUrl\";\r\nimport { getPlayListReq } from \"../network/playList/getPlayList\";\r\nimport { initPlayState, savePlayStateToLocal } from \"../utils/play/initPlayState\";\r\nimport { Scheduler } from \"../utils/scheduler\";\r\nimport { showToast } from \"../utils/showToast\";\r\nimport { PlayingMusicStore } from \"./playingMusic\";\r\n\r\nconst setMusicScheduler = new Scheduler(1);\r\n\r\n/**\r\n * 音乐播放相关全局状态\r\n */\r\nclass PlayState {\r\n  /** 当前播放的音乐 */\r\n  curMusic: MusicNUrl = { ...defaultMusic };\r\n  /** 当前播放列表 */\r\n  tracks: MusicDetail[] = [];\r\n  /** 播放状态 */\r\n  playMode = PlayMode.NORMAL;\r\n  /** 随机洗过的音乐**id**的表 */\r\n  private randTrack: number[] = [];\r\n  private playlistID?: PlayListID;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    const { curMusicId, curPlayListID, curPlayMode } = initPlayState();\r\n\r\n    this.playMode = curPlayMode;\r\n    this.setPlayListNMusic(curPlayListID, curMusicId, true);\r\n  }\r\n\r\n  /** 刷新随机列表 */\r\n  private resetRandList() {\r\n    const list = this.tracks.map((m) => m.id);\r\n\r\n    for (let i = list.length; i > 0; i--) {\r\n      const temp = list[i];\r\n      const randIndex = Math.floor(Math.random() * (i + 1));\r\n\r\n      list[i] = list[randIndex];\r\n      list[randIndex] = temp;\r\n    }\r\n\r\n    this.randTrack = list;\r\n  }\r\n\r\n  /**\r\n   * 设置当前音乐\r\n   * @param curMusic 可传 id 或 MusicDetail\r\n   * @returns 是否成功\r\n   */\r\n  private async setCurMusic(curMusic: MusicID | MusicDetail): Promise<boolean> {\r\n    return setMusicScheduler.add(() => this._setCurMusic(curMusic));\r\n  }\r\n\r\n  private async _setCurMusic(\r\n    curMusic: MusicID | MusicDetail\r\n  ): Promise<boolean> {\r\n    if (typeof curMusic === \"number\")\r\n      curMusic = this.tracks.find((m) => m.id === curMusic) as MusicDetail;\r\n    if (!curMusic) return false;\r\n\r\n    const url = await getMusicUrlReq({ id: curMusic.id });\r\n\r\n    if (!url) return false;\r\n\r\n    const curMusicFull: MusicNUrl = {\r\n      ...curMusic,\r\n      url,\r\n    };\r\n\r\n    this.curMusic = curMusicFull;\r\n    PlayingMusicStore.setLyric(curMusicFull.id);\r\n\r\n    savePlayStateToLocal({ curMusicId: curMusicFull.id });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 切歌\r\n   * @param direction 上一首 or 下一首\r\n   */\r\n  async switchMusic(direction: \"next\" | \"prev\", leap = 1): Promise<void> {\r\n    let toSet: number | MusicDetail;\r\n\r\n    if (this.playMode === PlayMode.RAND) {\r\n      // 如果的随机模式则在随机列表中切\r\n      // 随机推荐算法参考 https://www.ifanr.com/1379669\r\n      // 本应用中随机算法为洗牌算法, 即固定播放洗过的歌单\r\n      // 一方面保证用户切上一首时可以保证可靠性\r\n      // 其次也可使用户短时间内听不到重复的歌\r\n      const curIndex = this.randTrack.findIndex(\r\n        (id) => id === this.curMusic.id\r\n      );\r\n      const nextInd =\r\n        (curIndex +\r\n          (direction === \"next\" ? 1 : -1) * leap +\r\n          this.randTrack.length) %\r\n        this.randTrack.length;\r\n\r\n      toSet = this.randTrack[nextInd];\r\n    } else {\r\n      // 如果是其他模式, 则按歌单顺序切\r\n      const curIndex = this.tracks.findIndex((t) => t.id === this.curMusic.id);\r\n      const nextInd =\r\n        (curIndex +\r\n          (direction === \"next\" ? 1 : -1) * leap +\r\n          this.tracks.length) %\r\n        this.tracks.length;\r\n      toSet = this.tracks[nextInd];\r\n    }\r\n    const success = await this.setCurMusic(toSet);\r\n\r\n    if (success) return;\r\n\r\n    // 最多重复 10 次\r\n    if (leap === 14) return showToast(\"获得歌曲链接失败qwq\", \"error\");\r\n    else return this.switchMusic(direction, leap + 1);\r\n  }\r\n\r\n  /**\r\n   * ## Set Playlist and Music\r\n   * ### 设置当前歌单并自动切歌\r\n   * > 不支持播放一首**非歌单内**的歌曲(比如添加到下一首播放), 要播放歌曲必须设置歌单\r\n   * > 如需脱离歌单播放音乐, 请转而调用 setMusicsWithoutPlaylist 方法\r\n   * @param playlist 要设置的播放列表, 可为 ID 或**完整列表**, 传入 ID 会发请求将其填充成完整列表,\r\n   *                 传入完整列表会直接复用(节省一次网络请求).\r\n   *                 若传入 ID 或传入列表 ID 与当前播放列表 ID 相同则不处理(除非设置 force)\r\n   * @param musicID (可选)歌单中的音乐 ID. 若指定, 将当前播放音乐设为此曲,\r\n   *                否则根据播放模式自动设置当前播放音乐. 若与当前音乐 ID 相同则不处理(除非设置 force)\r\n   * @param force 强制更新歌单和歌曲(无论 ID 是否相同)\r\n   */\r\n  async setPlayListNMusic(\r\n    playlist: PlayListID | PlayList<true>,\r\n    musicID?: MusicID,\r\n    force = false\r\n  ) {\r\n    // 将 playlist 填充为完整的 PlayList\r\n    if (typeof playlist === \"number\") {\r\n      if (playlist === this.playlistID && !force) {\r\n        /* 若与当前播放列表 ID 相同则不处理 */\r\n      } else {\r\n        const fullPlaylist = await getPlayListReq({\r\n          id: playlist,\r\n        });\r\n        if (!fullPlaylist) return showToast(\"加载歌单失败，请重试\", \"error\");\r\n        this.tracks = fullPlaylist.trackIds;\r\n        this.playlistID = playlist;\r\n        // 重置随机播放列表\r\n        this.resetRandList();\r\n      }\r\n    } else {\r\n      if (playlist.id === this.playlistID && !force) {\r\n        this.tracks = playlist.trackIds;\r\n        this.playlistID = playlist.id;\r\n        // 重置随机播放列表\r\n        this.resetRandList();\r\n      }\r\n    }\r\n\r\n    if (musicID) {\r\n      if (musicID === this.curMusic.id && !force) {\r\n        /* 给了相同的 id 但没有强制设置则不设置 */\r\n      } else {\r\n        this.setCurMusic(musicID);\r\n      }\r\n    } else {\r\n      if (this.playMode === PlayMode.RAND) {\r\n        // 设置当前音乐\r\n        this.setCurMusic(this.randTrack[0]);\r\n      } else {\r\n        this.setCurMusic(this.tracks[0]);\r\n      }\r\n    }\r\n\r\n    savePlayStateToLocal({\r\n      curPlayListID: typeof playlist === \"number\" ? playlist : playlist.id,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置播放列表为一组音乐, 并设置当前歌曲为其中第一首\r\n   * @param musics 设置的播放列表(长度为 0 会直接返回)\r\n   */\r\n  async setMusicsWithoutPlaylist(musics: MusicDetail[]) {\r\n    if (musics.length === 0) return;\r\n    this.tracks = musics;\r\n    this.playlistID = 0;\r\n    this.resetRandList();\r\n\r\n    this.setCurMusic(this.tracks[0]);\r\n    savePlayStateToLocal({ curPlayListID: 0 });\r\n  }\r\n\r\n  /**\r\n   * 切换播放模式\r\n   */\r\n  switchPlayMode() {\r\n    if (this.playMode === PlayMode.NORMAL) this.playMode = PlayMode.RAND;\r\n    else if (this.playMode === PlayMode.RAND) this.playMode = PlayMode.LOOP;\r\n    else if (this.playMode === PlayMode.LOOP) this.playMode = PlayMode.NORMAL;\r\n\r\n    savePlayStateToLocal({ curPlayMode: this.playMode });\r\n  }\r\n}\r\n\r\nexport const PlayStore = new PlayState();\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nimport { UserProfile } from \"../models/User\";\r\n\r\n/**\r\n * 音乐播放相关全局状态\r\n */\r\nclass SelfState {\r\n  /** 个人信息 */\r\n  self?: UserProfile;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n}\r\n\r\nexport const SelfStore = new SelfState();\r\n","import \"./index.scss\";\r\n\r\nimport { useMemo } from \"react\";\r\n\r\nfunction LoadingNote() {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        className=\"loading_note\"\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"5768\"\r\n        width=\"2rem\"\r\n        height=\"2rem\"\r\n      >\r\n        <path\r\n          d=\"M576 277.333333v268.8c-23.466667-14.933333-51.2-23.466667-85.333333-23.466666-72.533333 0-128 42.666667-128 98.133333s55.466667 98.133333 128 98.133333 128-42.666667 128-98.133333V277.333333h-42.666667z m-85.333333 396.8c-46.933333 0-85.333333-25.6-85.333334-55.466666s38.4-55.466667 85.333334-55.466667 85.333333 25.6 85.333333 55.466667-38.4 55.466667-85.333333 55.466666z\"\r\n          fill=\"#E60026\"\r\n          p-id=\"5769\"\r\n          data-spm-anchor-id=\"a313x.7781069.0.i7\"\r\n        ></path>\r\n        <path\r\n          d=\"M770.133333 322.133333l-29.866666 29.866667C795.733333 411.733333 832 488.533333 832 576c0 177.066667-142.933333 320-320 320S192 753.066667 192 576c0-168.533333 132.266667-307.2 298.666667-317.866667v-42.666666C300.8 226.133333 149.333333 384 149.333333 576c0 200.533333 162.133333 362.666667 362.666667 362.666667s362.666667-162.133333 362.666667-362.666667c0-98.133333-40.533333-187.733333-104.533334-253.866667z\"\r\n          fill=\"\"\r\n          p-id=\"5770\"\r\n        ></path>\r\n        <path\r\n          d=\"M802.133333 292.266667l29.866667-29.866667c-68.266667-68.266667-155.733333-115.2-256-130.133333v42.666666c87.466667 14.933333 166.4 57.6 226.133333 117.333334z\"\r\n          fill=\"#E60026\"\r\n          p-id=\"5771\"\r\n          data-spm-anchor-id=\"a313x.7781069.0.i8\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    []\r\n  );\r\n}\r\n\r\nexport default LoadingNote;\r\n","import \"./index.scss\";\r\n\r\nimport { useMemo, useState } from \"react\";\r\n\r\nimport LoadingNote from \"./components/LoadingNote\";\r\n\r\ntype ImgProps = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLDivElement>,\r\n  HTMLDivElement\r\n> &\r\n  MemoImgProps &\r\n  LoadingProps;\r\n\r\ntype MemoImgProps = {\r\n  src: string;\r\n  alt: string;\r\n  imgClassName?: string;\r\n};\r\n\r\ntype LoadingProps = {\r\n  loadingMask?: boolean; // 是否需要加载状态\r\n};\r\n\r\n/**\r\n * @param props 相关api如下\\\r\n * **`img`标签仅提供三个api**\r\n * - `src`: 图片src\r\n * - `alt`: 图片alt\r\n * - `imgClassName`: `img`标签的类名\r\n * **加载相关api**\r\n * - loadingMask: boolean, 是否需要加载态，默认为true，若图片小于1rem请修改此属性为false\r\n * **其它均加在img外部container上，支持所有div属性**\r\n */\r\n\r\nfunction Img(props: ImgProps) {\r\n  const {\r\n    src,\r\n    imgClassName = \"\",\r\n    alt,\r\n    className = \"\",\r\n    loadingMask = true,\r\n    ...containerProps\r\n  } = props;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const memoImg = useMemo(\r\n    () => (\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className={`img-memo ${imgClassName}`}\r\n        onLoad={() => setIsLoading(false)}\r\n      />\r\n    ),\r\n    [src, alt, imgClassName]\r\n  );\r\n\r\n  return (\r\n    <div {...containerProps} className={`img ${className}`}>\r\n      {memoImg}\r\n      {isLoading && loadingMask && (\r\n        <div className=\"img-loading\">\r\n          <LoadingNote />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Img;\r\n","import { MusicID } from \"../../models/Music\";\r\nimport _request from \"../_request\";\r\n\r\nexport type GetMusicLyricReqData = {\r\n  musicID: MusicID;\r\n};\r\n\r\n/**\r\n * 获得音乐的歌词\r\n * @returns\r\n */\r\nexport async function getMusicLyricReq(data: GetMusicLyricReqData) {\r\n  const res = await _request<{ lrc: { lyric: string } }>({\r\n    url: `/lyric?id=${data.musicID}`,\r\n    method: \"GET\",\r\n  });\r\n\r\n  if (!res || !res.lrc || !res.lrc.lyric) return null;\r\n\r\n  return res.lrc.lyric;\r\n}\r\n","import { Lyric } from \"../models/lyric\";\r\n\r\nconst reg = /\\[(\\d+):(\\d+)\\.\\d+](.*)/;\r\n\r\nexport function lyricStr2LyricItem(str: string | null): Lyric[] {\r\n  if (!str) return [];\r\n\r\n  const lyricLines = str.split(\"\\n\");\r\n\r\n  return lyricLines\r\n    .map((line) => {\r\n      const res = reg.exec(line);\r\n      if (!res) return null;\r\n\r\n      const [_, min, sec, content] = res;\r\n\r\n      const lyric: Lyric = {\r\n        content,\r\n        startSec: parseInt(min) * 60 + parseInt(sec),\r\n        ref: null,\r\n      };\r\n\r\n      return lyric;\r\n    })\r\n    .filter((l) => l !== null) as Lyric[];\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nimport { Lyric } from \"../models/lyric\";\r\nimport { MusicID } from \"../models/Music\";\r\nimport { UserProfile } from \"../models/User\";\r\nimport { getMusicLyricReq } from \"../network/music/getMusicLyric\";\r\nimport { lyricStr2LyricItem } from \"../utils/lyricStr2LyricItem\";\r\n\r\n/**\r\n * 音乐播放状态\\\r\n * 与 PlayState 的区别: 这个存单曲播放进度的信息, PlayState 存歌单相关信息\r\n */\r\nclass PlayingMusicState {\r\n  /** 当前播放进度(秒) */\r\n  lyric: Lyric[] = [];\r\n  _audioRef: HTMLAudioElement | null = null;\r\n\r\n  get audioRef() {\r\n    return this._audioRef;\r\n  }\r\n\r\n  set audioRef(ref: HTMLAudioElement | null) {\r\n    if (this._audioRef || !ref) return;\r\n    this._audioRef = ref;\r\n  }\r\n\r\n  getCurrentTime() {\r\n    if (!this.audioRef) return 0;\r\n    return Math.round(this.audioRef.currentTime);\r\n  }\r\n  set currentTime(time: number) {\r\n    if (!this.audioRef) return;\r\n    this.audioRef.currentTime = time;\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async setLyric(musicID: MusicID) {\r\n    const lyricStr = await getMusicLyricReq({ musicID });\r\n\r\n    this.lyric = lyricStr2LyricItem(lyricStr);\r\n  }\r\n}\r\n\r\nexport const PlayingMusicStore = new PlayingMusicState();\r\n","import { configure } from \"mobx\";\r\n\r\nconfigure({\r\n  enforceActions: \"never\",\r\n});\r\n","import { showToast } from \"./showToast\";\r\n\r\nexport function notImplemented() {\r\n  showToast(\"暂未实现\", \"warning\");\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { notImplemented } from \"../../../../utils/notImplemented\";\r\nimport Img from \"../../../Img\";\r\n\r\ntype PlayListItem = {\r\n  icon: string;\r\n  content: string;\r\n};\r\n\r\nexport default function PlayListItem(props: PlayListItem) {\r\n  const { content, icon } = props;\r\n\r\n  return (\r\n    <div className=\"play_list_item\" onClick={notImplemented}>\r\n      <Img\r\n        className=\"play_list_item-icon\"\r\n        src={icon}\r\n        alt=\"\"\r\n        loadingMask={false}\r\n      />\r\n      <span className=\"ellipsis\">{content}</span>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cloud.5ea46192.svg\";","export default __webpack_public_path__ + \"static/media/download.5a1f47d3.svg\";","export default __webpack_public_path__ + \"static/media/fm.3e741cb1.svg\";","import cloudIcon from \"../img/cloud.svg\";\r\nimport downloadIcon from \"../img/download.svg\";\r\nimport fmIcon from \"../img/fm.svg\";\r\nimport recentMusicIcon from \"../img/recentMusic.svg\";\r\nimport starIcon from \"../img/star.svg\";\r\n\r\ntype MyMusicItem = {\r\n  icon: string;\r\n  content: string;\r\n};\r\n\r\nexport const myMusic: MyMusicItem[] = [\r\n  {\r\n    icon: downloadIcon,\r\n    content: \"本地与下载\",\r\n  },\r\n  {\r\n    icon: recentMusicIcon,\r\n    content: \"最近播放\",\r\n  },\r\n  {\r\n    icon: cloudIcon,\r\n    content: \"我的音乐云盘\",\r\n  },\r\n  {\r\n    icon: fmIcon,\r\n    content: \"我的播客\",\r\n  },\r\n  {\r\n    icon: starIcon,\r\n    content: \"我的收藏\",\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/recentMusic.79bc04c7.svg\";","export default __webpack_public_path__ + \"static/media/star.d0ef0567.svg\";","export const tabs = [\"发现音乐\", \"播客\", \"视频\", \"朋友\", \"直播\", \"私人FM\"];\r\n","export default __webpack_public_path__ + \"static/media/left.880964d0.svg\";","export default __webpack_public_path__ + \"static/media/playList.1f88eeb1.svg\";","import \"./index.scss\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useWindowSize } from \"react-use/lib\";\r\n\r\nimport { AsideShrinkWidth } from \"../../constants/mediaQuery\";\r\nimport { notImplemented } from \"../../utils/notImplemented\";\r\nimport Img from \"../Img\";\r\nimport PlayListItem from \"./components/PlayListItem\";\r\nimport { myMusic } from \"./data/myMusic\";\r\nimport { tabs } from \"./data/tabs\";\r\nimport { useUserPlayLists } from \"./hooks/useUserPlayLists\";\r\nimport leftIcon from \"./img/left.svg\";\r\nimport playListIcon from \"./img/playList.svg\";\r\n\r\nfunction _TheAsideBar() {\r\n  const [tabSelected, setTabSelected] = useState(tabs[0]);\r\n  const [asideBarShrink, setAsideBarShrink] = useState(false);\r\n  const { createPlayLists, starPlayLists } = useUserPlayLists();\r\n  const [createListHidden, setCreateListHidden] = useState(true);\r\n  const [starListHidden, setStarListHidden] = useState(true);\r\n\r\n  const { width } = useWindowSize();\r\n  const isSmall = width < AsideShrinkWidth;\r\n  useEffect(() => {\r\n    setAsideBarShrink(isSmall);\r\n  }, [isSmall]);\r\n\r\n  return (\r\n    <>\r\n      {!isSmall && (\r\n        <div\r\n          className={\r\n            \"aside_bar-placeholder\" + (asideBarShrink ? \" shrink\" : \"\")\r\n          }\r\n        ></div>\r\n      )}\r\n      <div className={\"aside_bar\" + (asideBarShrink ? \" shrink\" : \"\")}>\r\n        <div\r\n          className={\"aside_bar-arrow\" + (asideBarShrink ? \" show\" : \"\")}\r\n          onClick={() => setAsideBarShrink(!asideBarShrink)}\r\n        >\r\n          <Img\r\n            src={leftIcon}\r\n            alt=\"arrow\"\r\n            className={\r\n              \"aside_bar-arrow-icon\" + (asideBarShrink ? \" right\" : \"\")\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"aside_bar-wrap\">\r\n          {tabs.map((tab) => (\r\n            <div\r\n              className={`aside_bar-tab ${\r\n                tabSelected === tab ? \"selected\" : \"\"\r\n              }`}\r\n              key={tab}\r\n              onClick={() => {\r\n                setTabSelected(tab);\r\n                notImplemented();\r\n              }}\r\n            >\r\n              {tab}\r\n            </div>\r\n          ))}\r\n          <div className=\"aside_bar-title\">我的音乐</div>\r\n          {myMusic.map((myMusicItem) => (\r\n            <PlayListItem\r\n              content={myMusicItem.content}\r\n              icon={myMusicItem.icon}\r\n              key={myMusicItem.content}\r\n            />\r\n          ))}\r\n          <div\r\n            className=\"aside_bar-title\"\r\n            onClick={() => setCreateListHidden(!createListHidden)}\r\n          >\r\n            创建的歌单\r\n            <span\r\n              className={\r\n                \"aside_bar-title-triangle\" + (createListHidden ? \" rotate\" : \"\")\r\n              }\r\n            >\r\n              ▼\r\n            </span>\r\n          </div>\r\n          {createListHidden ||\r\n            createPlayLists.map((list) => (\r\n              <PlayListItem\r\n                content={list.name}\r\n                icon={playListIcon}\r\n                key={list.id}\r\n              />\r\n            ))}\r\n          <div\r\n            className=\"aside_bar-title\"\r\n            onClick={() => setStarListHidden(!starListHidden)}\r\n          >\r\n            收藏的歌单\r\n            <span\r\n              className={\r\n                \"aside_bar-title-triangle\" + (starListHidden ? \" rotate\" : \"\")\r\n              }\r\n            >\r\n              ▼\r\n            </span>\r\n          </div>\r\n          {starListHidden ||\r\n            starPlayLists.map((list) => (\r\n              <PlayListItem\r\n                content={list.name}\r\n                icon={playListIcon}\r\n                key={list.id}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst TheAsideBar = observer(_TheAsideBar);\r\n\r\nexport default TheAsideBar;\r\n","export const AsideShrinkWidth = 1000;\r\n","import \"./index.scss\";\r\n\r\nimport { MusicDetail } from \"../../models/Music\";\r\n\r\ntype AlbumBriefProps = {\r\n  music: MusicDetail;\r\n  imgRef: React.RefObject<HTMLImageElement>;\r\n};\r\n\r\nfunction AlbumBrief(props: AlbumBriefProps) {\r\n  const { music, imgRef } = props;\r\n\r\n  return (\r\n    <div className=\"album_brief\">\r\n      <img\r\n        ref={imgRef}\r\n        className=\"album_brief-img\"\r\n        src={music.al.picUrl}\r\n        alt={music.al.name}\r\n      />\r\n      <div className=\"album_brief-name t ellipsis\">{music.name}</div>\r\n      <div className=\"album_brief-artist t ellipsis\">\r\n        {music.ar.map((artist) => artist.name).join(\"/\")}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlbumBrief;\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgVolumeMute({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M672.8 730.496V344.192c92.864 15.36 164 96 164 193.152 0 97.152-71.136 177.792-164 193.152zM300.8 747.328c0 17.664-14.4 32-32 32H124.8c-17.632 0-32-14.336-32-32v-400c0-17.6 14.368-32 32-32h144c17.6 0 32 14.4 32 32v400z m58.432-430.944l249.568-173.76V909.44l-248.32-135.136c2.528-8.64 4.32-17.568 4.32-27.008v-400c0-10.88-2.24-21.184-5.568-30.944z m313.568-36.864V81.344h-0.448a31.552 31.552 0 0 0-31.552-31.552c-6.72 0-12.576 2.56-17.696 6.112l-0.576-0.832L319.36 266.112A95.008 95.008 0 0 0 268.8 251.328H124.8c-52.928 0-96 43.072-96 96v400c0 52.96 43.072 96 96 96h144c20 0 38.56-6.176 53.952-16.64l302.72 164.8 0.448-0.832a30.784 30.784 0 0 0 14.88 4.224 31.584 31.584 0 0 0 31.552-31.552h0.448V795.2c128.288-15.872 228-125.344 228-257.824 0-132.48-99.712-241.984-228-257.824zM1022.08 32.384a31.552 31.552 0 0 0-44.608 0l-0.32-0.32-58.688 58.688-58.688-58.688-0.32 0.32a31.584 31.584 0 0 0-44.64 44.608h0.032l-0.32 0.32 58.688 58.688-58.688 58.688 0.32 0.32a31.584 31.584 0 0 0 0 44.64 31.648 31.648 0 0 0 44.608 0l0.32 0.288 58.688-58.688 58.688 58.688 0.32-0.32a31.552 31.552 0 1 0 44.608-44.608l0.32-0.32-58.688-58.688 58.688-58.688-0.32-0.32a31.552 31.552 0 0 0 0-44.608\"\r\n          p-id=\"915\"\r\n          fill={color}\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgVolume({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M672.8 730.496V344.192c92.864 15.36 164 96 164 193.152 0 97.152-71.136 177.792-164 193.152zM300.8 747.328c0 17.664-14.4 32-32 32H124.8c-17.632 0-32-14.336-32-32v-400c0-17.6 14.368-32 32-32h144c17.6 0 32 14.4 32 32v400z m58.432-430.944l249.568-173.76V909.44l-248.32-135.136c2.528-8.64 4.32-17.568 4.32-27.008v-400c0-10.88-2.24-21.184-5.568-30.944z m313.568-36.864V81.344h-0.448a31.552 31.552 0 0 0-31.552-31.552c-6.72 0-12.576 2.56-17.696 6.112l-0.576-0.832L319.36 266.112A95.008 95.008 0 0 0 268.8 251.328H124.8c-52.928 0-96 43.072-96 96v400c0 52.96 43.072 96 96 96h144c20 0 38.56-6.176 53.952-16.64l302.72 164.8 0.448-0.832a30.784 30.784 0 0 0 14.88 4.224 31.584 31.584 0 0 0 31.552-31.552h0.448V795.2c128.288-15.872 228-125.344 228-257.824 0-132.48-99.712-241.984-228-257.824zM1022.08 42.384a31.552 31.552 0 0 0-44.608\"\r\n          p-id=\"1062\"\r\n          fill={color}\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { ImgCompProps } from \".\";\r\n\r\nexport default function ImgRand({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M262.4 768h-99.84c-21.76 0-38.4-16.64-38.4-38.4s16.64-38.4 38.4-38.4h99.84c88.32 0 144.64-90.88 204.8-186.88 64-104.96 138.24-224 268.8-224h28.16l-20.48-25.6c-12.8-16.64-10.24-40.96 6.4-53.76s40.96-10.24 53.76 6.4l69.12 87.04c8.96 11.52 10.24 26.88 3.84 40.96s-19.2 21.76-34.56 21.76h-107.52c-88.32 0-144.64 90.88-203.52 186.88-64 104.96-136.96 224-268.8 224z\"\r\n          fill={color}\r\n          p-id=\"903\"\r\n        ></path>\r\n        <path\r\n          d=\"M843.52 666.88h-107.52c-70.4 0-120.32-57.6-167.68-130.56-5.12 7.68-8.96 15.36-14.08 21.76-10.24 15.36-20.48 32-30.72 48.64 52.48 74.24 117.76 136.96 212.48 136.96h28.16l-20.48 25.6c-12.8 16.64-10.24 40.96 6.4 53.76 6.4 5.12 15.36 7.68 24.32 7.68 11.52 0 23.04-5.12 30.72-14.08l69.12-87.04c8.96-11.52 10.24-26.88 3.84-40.96s-20.48-21.76-34.56-21.76zM162.56 332.8h99.84c78.08 0 130.56 70.4 183.04 153.6l6.4-6.4c12.8-20.48 25.6-40.96 39.68-62.72C436.48 332.8 368.64 256 262.4 256h-99.84c-21.76 0-38.4 16.64-38.4 38.4s16.64 38.4 38.4 38.4z\"\r\n          fill={color}\r\n          p-id=\"904\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgPrev({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"1050\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M381.44 577.28l346.88 240.64c34.56 24.32 83.2-1.28 83.2-43.52V293.12c0-42.24-47.36-67.84-83.2-43.52L381.44 490.24c-30.72 20.48-30.72 65.28 0 87.04z\"\r\n          fill={color}\r\n          p-id=\"1051\"\r\n        ></path>\r\n        <path\r\n          d=\"M320 828.16c-21.76 0-38.4-16.64-38.4-38.4v-512c0-21.76 16.64-38.4 38.4-38.4s38.4 16.64 38.4 38.4v512c0 20.48-16.64 38.4-38.4 38.4z\"\r\n          fill={color}\r\n          p-id=\"1052\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgPlayList({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M853.333333 238.933333H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666zM853.333333 554.666667H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666667h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666667zM563.2 849.066667H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666667h392.533333c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666667zM827.733333 938.666667c-10.666667 0-23.466667-2.133333-34.133333-8.533334l-113.066667-66.133333c-21.333333-12.8-34.133333-34.133333-34.133333-57.6s12.8-46.933333 34.133333-57.6l113.066667-66.133333c21.333333-12.8 46.933333-12.8 68.266667 0s34.133333 34.133333 34.133333 57.6v130.133333c0 23.466667-12.8 46.933333-34.133333 57.6-10.666667 6.4-23.466667 10.666667-34.133334 10.666667z m8.533334-83.2z m-87.466667-49.066667l59.733333 34.133333v-68.266666l-59.733333 34.133333z\"\r\n          fill={color}\r\n          p-id=\"876\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgPlay({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M943.36 472.32L433.92 119.04c-49.92-34.56-117.76 1.28-117.76 61.44v706.56c0 60.16 67.84 96 117.76 61.44l509.44-353.28c42.24-29.44 42.24-93.44 0-122.88z\"\r\n          fill={color}\r\n          p-id=\"1496\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \".\";\r\n\r\nexport default function ImgPaused({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M500.864 952.64c-239.648 0-434.656-194.976-434.656-434.624 0-239.68 195.008-434.624 434.656-434.624 239.68 0 434.656 194.944 434.656 434.624 0 239.68-195.008 434.624-434.656 434.624m0-933.28C225.92 19.36 2.24 243.104 2.24 518.016 2.24 792.96 225.92 1016.64 500.864 1016.64s498.656-223.68 498.656-498.624c0-274.912-223.68-498.624-498.656-498.624\"\r\n          p-id=\"1063\"\r\n          fill={color}\r\n        ></path>\r\n        <path\r\n          d=\"M404.864 326.016a32 32 0 0 0-32 32v320a32 32 0 0 0 64 0v-320a32 32 0 0 0-32-32M596.864 326.016a32 32 0 0 0-32 32v320a32 32 0 0 0 64 0v-320a32 32 0 0 0-32-32\"\r\n          p-id=\"1064\"\r\n          fill={color}\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgNormal({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M119.04 544c-6.4 0-14.08-2.56-20.48-5.12-11.52-6.4-17.92-19.2-17.92-33.28 0-241.92 197.12-439.04 439.04-439.04 186.88 0 354.56 119.04 416 295.68 6.4 20.48-3.84 42.24-24.32 48.64-20.48 6.4-42.24-3.84-48.64-24.32-49.92-145.92-188.16-244.48-343.04-244.48-177.92 0-326.4 128-357.12 298.24l38.4-19.2c19.2-8.96 42.24-1.28 51.2 16.64 8.96 19.2 1.28 42.24-16.64 51.2l-99.84 49.92c-5.12 3.84-10.24 5.12-16.64 5.12zM517.12 957.44c-185.6 0-352-117.76-414.72-293.12-7.68-20.48 3.84-42.24 23.04-48.64 20.48-7.68 42.24 3.84 48.64 23.04 51.2 144.64 188.16 241.92 341.76 241.92 177.92 0 326.4-128 357.12-298.24l-38.4 19.2c-19.2 8.96-42.24 1.28-51.2-16.64-8.96-19.2-1.28-42.24 16.64-51.2l99.84-49.92c11.52-6.4 25.6-5.12 37.12 1.28 11.52 6.4 17.92 19.2 17.92 33.28 1.28 241.92-195.84 439.04-437.76 439.04z\"\r\n          fill={color}\r\n          p-id=\"1347\"\r\n        ></path>\r\n        <path\r\n          d=\"M650.24 454.4H386.56c-21.76 0-38.4-16.64-38.4-38.4s16.64-38.4 38.4-38.4h264.96c21.76 0 38.4 16.64 38.4 38.4s-17.92 38.4-39.68 38.4z\"\r\n          fill={color}\r\n          p-id=\"1348\"\r\n        ></path>\r\n        <path\r\n          d=\"M650.24 646.4H386.56c-21.76 0-38.4-16.64-38.4-38.4s16.64-38.4 38.4-38.4h264.96c21.76 0 38.4 16.64 38.4 38.4s-17.92 38.4-39.68 38.4z\"\r\n          fill={color}\r\n          p-id=\"1349\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgLoop({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"902\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M773.597867 203.776l-0.273067 0.443733a33.621333 33.621333 0 0 0-20.343467-6.485333c-18.978133 0.785067-33.723733 16.725333-32.9728 35.771733a33.826133 33.826133 0 0 0 15.633067 26.794667l-0.1024 0.170667a375.227733 375.227733 0 0 1 166.2976 311.876266c0 207.018667-168.448 375.466667-375.466667 375.466667-27.818667 0-27.818667 0-54.340266-2.901333-90.453333-9.898667-152.610133-58.9824-155.5456-61.201067a375.330133 375.330133 0 0 1-165.5808-311.364267c0-201.4208 159.5392-365.841067 358.843733-374.647466l-41.984 40.823466 0.8192 0.853334a33.860267 33.860267 0 0 0-15.2576 29.218133c0.750933 18.978133 16.725333 33.757867 35.669333 33.041067a33.792 33.792 0 0 0 26.0096-14.472534l0.3072 0.341334 128.648534-124.996267L515.6864 34.0992l-0.4096 0.4096a33.6896 33.6896 0 0 0-26.3168-11.400533c-18.944 0.750933-33.6896 16.725333-32.9728 35.703466a33.8944 33.8944 0 0 0 13.038933 25.156267l45.226667 45.2608C275.182933 135.714133 82.602667 331.741867 82.602667 572.347733c0 147.626667 73.1136 285.149867 193.194666 366.114134 3.072 2.56 77.550933 62.190933 188.757334 74.308266 29.422933 3.208533 31.1296 3.310933 61.781333 3.310934 244.667733 0 443.733333-199.0656 443.733333-443.733334A443.392 443.392 0 0 0 773.597867 203.776\"\r\n          p-id=\"915\"\r\n          fill={color}\r\n        ></path>\r\n        <path\r\n          d=\"M542.071467 400.827733a33.28 33.28 0 0 0-17.134934 6.075734l-0.170666-0.3072-106.8032 69.700266 0.170666 0.273067a33.9968 33.9968 0 0 0-15.837866 29.696c0.750933 18.944 16.725333 33.723733 35.669333 32.9728a33.109333 33.109333 0 0 0 17.1008-6.0416l0.2048 0.273067 53.998933-35.259734v249.856h0.034134c0 0.477867-0.238933 0.887467-0.2048 1.365334a34.2016 34.2016 0 1 0 68.4032-1.365334h0.034133v-0.170666c0-0.4096 0.2048-0.750933 0.2048-1.160534 0-0.273067-0.170667-0.477867-0.2048-0.785066V435.2c0-0.477867 0.2048-0.887467 0.2048-1.3312a34.4064 34.4064 0 0 0-35.669333-33.041067\"\r\n          p-id=\"916\"\r\n          fill={color}\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import { useMemo } from \"react\";\r\n\r\nimport { ImgCompProps } from \"./\";\r\n\r\nexport default function ImgNext({ color, className }: ImgCompProps) {\r\n  return useMemo(\r\n    () => (\r\n      <svg\r\n        viewBox=\"0 0 1024 1024\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        p-id=\"1050\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        className={className}\r\n      >\r\n        <path\r\n          d=\"M686.08 448L339.2 207.36c-34.56-24.32-83.2 1.28-83.2 43.52v481.28c0 42.24 47.36 67.84 83.2 43.52l346.88-240.64c29.44-21.76 29.44-66.56 0-87.04z\"\r\n          fill={color}\r\n          p-id=\"1199\"\r\n        ></path>\r\n        <path\r\n          d=\"M746.24 785.92c-21.76 0-38.4-16.64-38.4-38.4v-512c0-21.76 16.64-38.4 38.4-38.4s38.4 16.64 38.4 38.4v512c0 20.48-16.64 38.4-38.4 38.4z\"\r\n          fill={color}\r\n          p-id=\"1200\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n    [color, className]\r\n  );\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { PlayStore } from \"../../mobx/play\";\r\nimport { PlayingMusicStore } from \"../../mobx/playingMusic\";\r\nimport { PlayMode } from \"../../models/Music\";\r\nimport { timeFormat } from \"../../utils/timeFormat\";\r\nimport AlbumBrief from \"../AlbumBrief\";\r\nimport {\r\n    ImgLoop, ImgNext, ImgNormal, ImgPaused, ImgPlay, ImgPlayList, ImgPrev, ImgRand, ImgVolume,\r\n    ImgVolumeMute\r\n} from \"./components/ImgComp\";\r\nimport { useColor } from \"./hooks/useColor\";\r\nimport { useCurrentTime } from \"./hooks/useCurrentTime\";\r\nimport { useIsPlaying } from \"./hooks/useIsPlaying\";\r\nimport { useMuted } from \"./hooks/useMuted\";\r\nimport { useVolume } from \"./hooks/useVolume\";\r\n\r\n// import { PlayStore } from \"../../mobx/play\";\r\n\r\n// type TheMusicPlayerProps = {\r\n//   src?: string;\r\n// };\r\n\r\nfunction _TheMusicPlayer(/* props: TheMusicPlayerProps */) {\r\n  const { url } = PlayStore.curMusic;\r\n  const audioRef = PlayingMusicStore.audioRef;\r\n\r\n  const history = useHistory();\r\n\r\n  const { isPlaying, togglePlaying, setIsPlaying } = useIsPlaying(audioRef);\r\n  const { currentTime, duration, percent, slideRef, handleMouseEvent } =\r\n    useCurrentTime(audioRef, setIsPlaying, isPlaying, url);\r\n  const { muted, toggleMuted } = useMuted(audioRef);\r\n  const { volume, handleVolumeMouseEvent, volumeSlideRef } =\r\n    useVolume(audioRef);\r\n\r\n  const { bgc, color, imgEl } = useColor(url);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"the_music_player t_m_p\"\r\n        style={{ background: bgc, color }}\r\n      >\r\n        <audio\r\n          autoPlay={isPlaying}\r\n          ref={(el) => (PlayingMusicStore.audioRef = el)}\r\n          src={url}\r\n        ></audio>\r\n\r\n        <div\r\n          className=\"t_m_p-album\"\r\n          onClick={() => history.push(\"/music-detail\")}\r\n        >\r\n          <AlbumBrief imgRef={imgEl} music={PlayStore.curMusic}></AlbumBrief>\r\n        </div>\r\n\r\n        <div className=\"t_m_p-play\">\r\n          <div className=\"t_m_p-play-icons\">\r\n            {/* 最左边的播放模式按钮 */}\r\n            <div\r\n              className=\"t_m_p-icon mode\"\r\n              onClick={() => PlayStore.switchPlayMode()}\r\n            >\r\n              {PlayStore.playMode === PlayMode.LOOP ? (\r\n                <ImgLoop color={color} className=\"t_m_p-icon-svg\"></ImgLoop>\r\n              ) : PlayStore.playMode === PlayMode.NORMAL ? (\r\n                <ImgNormal color={color} className=\"t_m_p-icon-svg\"></ImgNormal>\r\n              ) : (\r\n                <ImgRand color={color} className=\"t_m_p-icon-svg\"></ImgRand>\r\n              )}\r\n            </div>\r\n            {/* 切到前一首歌 */}\r\n            <div\r\n              className=\"t_m_p-icon prev\"\r\n              onClick={() => PlayStore.switchMusic(\"prev\")}\r\n            >\r\n              <ImgPrev color={color} className=\"t_m_p-icon-svg\"></ImgPrev>\r\n            </div>\r\n            {/* 播放 / 暂停 */}\r\n            <div\r\n              className=\"t_m_p-icon playstate\"\r\n              style={{ transform: \"scale(1.2)\" }}\r\n              onClick={togglePlaying}\r\n            >\r\n              {isPlaying ? (\r\n                <ImgPaused color={color} className=\"t_m_p-icon-svg\"></ImgPaused>\r\n              ) : (\r\n                <ImgPlay color={color} className=\"t_m_p-icon-svg\"></ImgPlay>\r\n              )}\r\n            </div>\r\n            {/* 切到下一首歌 */}\r\n            <div\r\n              className=\"t_m_p-icon next\"\r\n              onClick={() => PlayStore.switchMusic(\"next\")}\r\n            >\r\n              <ImgNext color={color} className=\"t_m_p-icon-svg\"></ImgNext>\r\n            </div>\r\n            {/* 最右边的占位符 */}\r\n            <div className=\"t_m_p-icon none\"></div>\r\n          </div>\r\n\r\n          <div className=\"t_m_p-play-bar\">\r\n            <div className=\"t_m_p-play-bar-cur_time t-l lh-0\">\r\n              {duration > 1 ? timeFormat(currentTime) : \"00:00\"}\r\n            </div>\r\n            <div\r\n              className=\"t_m_p-play-bar-slide\"\r\n              ref={slideRef}\r\n              onClick={handleMouseEvent}\r\n              onMouseDown={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                document.addEventListener(\"mousemove\", handleMouseEvent);\r\n                document.addEventListener(\r\n                  \"mouseup\",\r\n                  () => {\r\n                    document.removeEventListener(\"mousemove\", handleMouseEvent);\r\n                  },\r\n                  { once: true }\r\n                );\r\n              }}\r\n            >\r\n              <div className=\"t_m_p-play-bar-slide-full\"></div>\r\n              <div\r\n                className=\"t_m_p-play-bar-slide-done\"\r\n                style={{ width: `${percent}%`, color }}\r\n              >\r\n                <div className=\"t_m_p-play-bar-slide-done-dot\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"t_m_p-play-bar-duration t-l lh-0\">\r\n              {duration > 1 ? timeFormat(duration) : \"00:00\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"t_m_p-actions\">\r\n          <div\r\n            className=\"t_m_p-actions-volume t_m_p-icon\"\r\n            onClick={toggleMuted}\r\n          >\r\n            {muted ? (\r\n              <ImgVolumeMute\r\n                className=\"t_m_p-icon-svg\"\r\n                color={color}\r\n              ></ImgVolumeMute>\r\n            ) : (\r\n              <ImgVolume className=\"t_m_p-icon-svg\" color={color}></ImgVolume>\r\n            )}\r\n            <div\r\n              className=\"t_m_p-actions-volume-control\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <div\r\n                className=\"t_m_p-actions-volume-control-slide\"\r\n                ref={volumeSlideRef}\r\n                onClick={(e) => {\r\n                  if (muted) toggleMuted();\r\n                  handleVolumeMouseEvent(e);\r\n                }}\r\n                onMouseDown={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  document.addEventListener(\r\n                    \"mousemove\",\r\n                    handleVolumeMouseEvent\r\n                  );\r\n                  document.addEventListener(\r\n                    \"mouseup\",\r\n                    () => {\r\n                      document.removeEventListener(\r\n                        \"mousemove\",\r\n                        handleVolumeMouseEvent\r\n                      );\r\n                    },\r\n                    { once: true }\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"t_m_p-actions-volume-control-slide-full\"></div>\r\n                <div\r\n                  className=\"t_m_p-actions-volume-control-slide-done\"\r\n                  style={{ height: `${muted ? \"0\" : volume}%` }}\r\n                >\r\n                  <div className=\"t_m_p-actions-volume-control-slide-done-dot\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"t_m_p-actions-play_list t_m_p-icon\">\r\n            <ImgPlayList className=\"t_m_p-icon-svg\" color={color}></ImgPlayList>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"t_m_p-placeholder\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst TheMusicPlayer = observer(_TheMusicPlayer);\r\n\r\nexport default TheMusicPlayer;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useIsPlaying(curAudioEl: HTMLAudioElement | null) {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!curAudioEl) return;\r\n    if (isPlaying) curAudioEl.play();\r\n    else curAudioEl.pause();\r\n  }, [isPlaying, curAudioEl]);\r\n\r\n  function togglePlaying() {\r\n    setIsPlaying((p) => !p);\r\n  }\r\n\r\n  return { isPlaying, togglePlaying, setIsPlaying };\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { PlayStore } from \"../../../mobx/play\";\r\nimport { PlayingMusicStore } from \"../../../mobx/playingMusic\";\r\nimport { PlayMode } from \"../../../models/Music\";\r\n\r\nexport function useCurrentTime(\r\n  curAudioEl: HTMLAudioElement | null,\r\n  setIsPlaying: (play: boolean) => void,\r\n  isPlaying: boolean,\r\n  url?: string\r\n) {\r\n  const [_, _setForUpdate] = useState(false);\r\n  function forceUpdate() {\r\n    _setForUpdate((b) => !b);\r\n  }\r\n\r\n  /** 当前播放进度(秒) */\r\n  const currentTime = PlayingMusicStore.getCurrentTime();\r\n\r\n  function setCurrentTime(time: number) {\r\n    PlayingMusicStore.currentTime = time;\r\n  }\r\n\r\n  // 切歌的时候重置时间\r\n  useEffect(() => {\r\n    setCurrentTime(0);\r\n  }, [curAudioEl && curAudioEl.currentSrc, url]);\r\n\r\n  // 设置 time 一直自增\r\n  useEffect(() => {\r\n    if (!isPlaying) return;\r\n    const timer = setInterval(() => {\r\n      forceUpdate();\r\n      if (!curAudioEl) return;\r\n      const time = curAudioEl.currentTime;\r\n\r\n      if (time >= curAudioEl.duration) {\r\n        if (PlayStore.playMode !== PlayMode.LOOP) {\r\n          PlayStore.switchMusic(\"next\").then(() => {\r\n            setCurrentTime(0);\r\n            setIsPlaying(true);\r\n          });\r\n          setIsPlaying(false);\r\n        } else {\r\n          // 单曲循环下需要重置播放器播放时间\r\n          setCurrentTime(0);\r\n          curAudioEl.play();\r\n        }\r\n        forceUpdate();\r\n      }\r\n    }, 500);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [isPlaying]);\r\n\r\n  const duration = (curAudioEl && curAudioEl.duration) || 0.1;\r\n\r\n  let percent = (currentTime * 100) / duration;\r\n  if (percent > 100) percent = 100;\r\n  else if (percent < 0) percent = 0;\r\n  if (duration < 1) percent = 0;\r\n\r\n  const slideRef = useRef<HTMLDivElement>(null);\r\n  const handleMouseEvent = (e: { clientX: number }) => {\r\n    if (!slideRef.current) return;\r\n    const rect = slideRef.current.getBoundingClientRect();\r\n    let percent = (e.clientX - rect.left) / rect.width;\r\n    if (percent > 1) percent = 1;\r\n    if (percent < 0) percent = 0;\r\n\r\n    setCurrentTime(percent * duration);\r\n    forceUpdate();\r\n  };\r\n\r\n  return {\r\n    currentTime,\r\n    percent,\r\n    duration,\r\n    handleMouseEvent,\r\n    slideRef,\r\n  };\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useMuted(curAudioEl: HTMLAudioElement | null) {\r\n  const [muted, setMuted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!curAudioEl) return;\r\n\r\n    curAudioEl.muted = muted;\r\n  }, [muted, curAudioEl]);\r\n\r\n  function toggleMuted() {\r\n    setMuted((m) => !m);\r\n  }\r\n\r\n  return { muted, toggleMuted };\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useVolume(curAudioEl: HTMLAudioElement | null) {\r\n  const [volume, setVolume] = useState(70);\r\n\r\n  useEffect(() => {\r\n    if (!curAudioEl) return;\r\n\r\n    curAudioEl.volume = volume / 100;\r\n  }, [volume, curAudioEl]);\r\n\r\n  const volumeSlideRef = useRef<HTMLDivElement>(null);\r\n  const handleVolumeMouseEvent = (e: { clientY: number }) => {\r\n    if (!volumeSlideRef.current) return;\r\n    const rect = volumeSlideRef.current.getBoundingClientRect();\r\n    let percent = (rect.bottom - e.clientY) / rect.height;\r\n    if (percent > 1) percent = 1;\r\n    if (percent < 0) percent = 0;\r\n\r\n    setVolume(percent * 100);\r\n  };\r\n\r\n  return { volume, handleVolumeMouseEvent, volumeSlideRef };\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { ColorExtractor } from \"image-color-extraction\";\r\n\r\n/**\r\n * 根据图片提取其主色(背景色和字体色)\r\n * @param albumUrl 图片 url\r\n */\r\nexport function useColor(albumUrl?: string) {\r\n  const [colors, setColors] = useState({\r\n    color: \"var(--on-bg)\",\r\n    bgc: \"var(--bg)\",\r\n  });\r\n\r\n  // 需得到图片元素来绘制 canvas\r\n  const imgEl = useRef<HTMLImageElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!imgEl.current || !albumUrl) return;\r\n\r\n    const extractor = new ColorExtractor({ compresionRate: 0.5 });\r\n\r\n    extractor.extractColor(imgEl.current).then(() => {\r\n      if (!(extractor.colors && extractor.colors.length > 2)) return;\r\n      const colors = extractor.chooseReadableColor();\r\n      setColors({\r\n        bgc: colors[0],\r\n        color: colors[1],\r\n      });\r\n    });\r\n  }, [albumUrl, imgEl.current]);\r\n\r\n  return { ...colors, imgEl };\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { ToastsStore } from \"../../mobx/toasts\";\r\n\r\nfunction _TheToasts(/* props: TheToastsProps */) {\r\n  const toasts = ToastsStore.toasts;\r\n\r\n  return (\r\n    <div className=\"the_toasts\">\r\n      {toasts.map((toast) => (\r\n        <div key={toast.id} className={`the_toasts-toast ${toast.severity}`}>\r\n          {toast.value}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nconst TheToasts = observer(_TheToasts);\r\n\r\nexport default TheToasts;\r\n","export default __webpack_public_path__ + \"static/media/logo.fb41b4ec.svg\";","import { useState } from \"react\";\r\n\r\nexport type LoginForm = {\r\n  phone: string;\r\n  password: string;\r\n};\r\n\r\nconst initialForm = {\r\n  phone: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const useForm = () => {\r\n  const [form, _setForm] = useState<LoginForm>(initialForm);\r\n  const [formHint, setFormHint] = useState<LoginForm>(initialForm);\r\n\r\n  /**\r\n   *\r\n   * @param key string, form的key\r\n   * @param value string, 将要赋给form[key]的值\r\n   */\r\n  const setForm = (key: Partial<keyof LoginForm>, value: string) => {\r\n    const newForm = { ...form };\r\n    newForm[key] = value;\r\n    _setForm(newForm);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param key string, form的key，可选，若有key则只检查form[key]，没有则全部检查\r\n   */\r\n  const checkForm = (key?: Partial<keyof LoginForm>) => {\r\n    if (!key || key === \"phone\") {\r\n      /^1[3-9]\\d{9}$/.test(form.phone) ||\r\n        setFormHint({ ...formHint, phone: \"手机号格式不正确\" });\r\n    }\r\n    if (!key || key === \"password\") {\r\n      let passwordFilter = form.password;\r\n\r\n      const numberReg = /(?=.*[0-9])^[0-9A-Za-z]{8,20}$/;\r\n      passwordFilter = passwordFilter.replace(/\\d/g, \"\");\r\n      const numberTest = Number(numberReg.test(form.password));\r\n\r\n      const letterReg = /(?=.*[A-Za-z])^[0-9A-Za-z]{8,20}$/;\r\n      passwordFilter = passwordFilter.replace(/[A-Za-z]/g, \"\");\r\n      const letterTest = Number(letterReg.test(form.password));\r\n\r\n      const charTest = Number(passwordFilter);\r\n\r\n      if (numberTest + letterTest + charTest < 2) {\r\n        setFormHint({ ...formHint, password: \"密码格式不正确\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param key string, form的key，可选，若有key则只清除formHint[key]，没有则全部清除\r\n   */\r\n  const clearHint = (key?: Partial<keyof LoginForm>) => {\r\n    const phoneHint = !key || key === \"phone\" ? \"\" : formHint.phone;\r\n    const passwordHint = !key || key === \"password\" ? \"\" : formHint.password;\r\n    setFormHint({ phone: phoneHint, password: passwordHint });\r\n  };\r\n\r\n  return { form, setForm, checkForm, clearHint, formHint };\r\n};\r\n","import { UserProfile } from \"../../models/User\";\r\nimport _request from \"../_request\";\r\n\r\nexport type LoginReqParams = {\r\n  phone: string;\r\n  password: string;\r\n};\r\n\r\ntype LoginResDate = {\r\n  profile: UserProfile;\r\n  cookie: string;\r\n};\r\n\r\n/**\r\n * 使用手机号 + 密码登录\r\n * @returns\r\n */\r\nexport async function loginReq(params: LoginReqParams) {\r\n  const res = await _request<LoginResDate>({\r\n    url: \"/login/cellphone\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n\r\n  return res;\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport logoIcon from \"../../../../img/logo.svg\";\r\nimport Img from \"../../../Img\";\r\nimport { useForm } from \"./hooks/useForm\";\r\nimport { useLogin } from \"./hooks/useLogin\";\r\n\r\ntype DialogLoginProps = {\r\n  close: () => void;\r\n};\r\n\r\nexport default function DialogLogin(props: DialogLoginProps) {\r\n  const { close } = props;\r\n  const { checkForm, clearHint, form, formHint, setForm } = useForm();\r\n  const { login } = useLogin({ checkForm, form, formHint, close });\r\n\r\n  return (\r\n    <div\r\n      className=\"dialog_login\"\r\n      onKeyDown={(e) => e.key === \"Escape\" && close()}\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <div className=\"dialog_login-close\" onClick={close}></div>\r\n      <Img\r\n        src={logoIcon}\r\n        alt=\"logo\"\r\n        className=\"dialog_login-logo\"\r\n        loadingMask={false}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"dialog_login-input\"\r\n        placeholder=\"请输入手机号\"\r\n        value={form.phone}\r\n        onChange={(e) => setForm(\"phone\", e.target.value)}\r\n        onBlur={() => {\r\n          checkForm(\"phone\");\r\n        }}\r\n        onFocus={() => clearHint(\"phone\")}\r\n      />\r\n      {formHint.phone && (\r\n        <div className=\"dialog_login-hint\">{formHint.phone}</div>\r\n      )}\r\n      <input\r\n        type=\"password\"\r\n        className=\"dialog_login-input\"\r\n        placeholder=\"请输入密码\"\r\n        value={form.password}\r\n        onChange={(e) => setForm(\"password\", e.target.value)}\r\n        onBlur={() => checkForm(\"password\")}\r\n        onFocus={() => clearHint(\"password\")}\r\n        maxLength={20}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") login();\r\n        }}\r\n      />\r\n      {formHint.password && (\r\n        <div className=\"dialog_login-hint\">{formHint.password}</div>\r\n      )}\r\n      <div className=\"dialog_login-button\" onClick={login}>\r\n        登录\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { COOKIE } from \"../../../../../constants/localStorageKey\";\r\nimport { SelfStore } from \"../../../../../mobx/self\";\r\nimport { loginReq } from \"../../../../../network/user/login\";\r\nimport { showToast } from \"../../../../../utils/showToast\";\r\nimport { LoginForm } from \"./useForm\";\r\n\r\ntype UseLogin = {\r\n  form: LoginForm;\r\n  formHint: LoginForm;\r\n  checkForm: () => void;\r\n  close: () => void;\r\n};\r\n\r\nexport const useLogin = (props: UseLogin) => {\r\n  const { checkForm, form, formHint, close } = props;\r\n\r\n  const login = async () => {\r\n    checkForm();\r\n    if (formHint.phone) return showToast(formHint.phone, \"error\");\r\n    if (formHint.password) return showToast(formHint.password, \"error\");\r\n\r\n    const userInfo = await loginReq({ ...form });\r\n    if (!userInfo) return;\r\n\r\n    SelfStore.self = userInfo.profile;\r\n\r\n    window.localStorage.setItem(COOKIE, userInfo.cookie);\r\n    showToast(\"登录成功\", \"success\");\r\n    close();\r\n  };\r\n\r\n  return { login };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.41ab08ae.svg\";","import \"./index.scss\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport logo from \"../../images/logo.svg\";\r\n\r\nfunction Logo() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"c-the_top_bar-logo\" onClick={() => history.push(\"/\")}>\r\n      <img src={logo} className=\"icon\" />\r\n      <h2>网易云音乐</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","export default __webpack_public_path__ + \"static/media/toLeft.c7a11d6f.svg\";","export default __webpack_public_path__ + \"static/media/toRight.0eea0fb8.svg\";","import \"./index.scss\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport toLeft from \"../../images/toLeft.svg\";\r\nimport toRight from \"../../images/toRight.svg\";\r\n\r\nfunction PageChanger() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"c-the_top_bar-middle-page_changer\">\r\n      <button\r\n        onClick={() => history.go(1)}\r\n        className=\"c-the_top_bar-middle-page_changer-btn\"\r\n      >\r\n        <img src={toLeft} className=\"icon\" />\r\n      </button>\r\n      <button\r\n        onClick={() => history.go(-1)}\r\n        className=\"c-the_top_bar-middle-page_changer-btn\"\r\n      >\r\n        <img src={toRight} className=\"icon\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageChanger;\r\n","export default __webpack_public_path__ + \"static/media/search.4d6fe247.svg\";","export default __webpack_public_path__ + \"static/media/trashBin.6f0e4d5e.svg\";","import \"./index.scss\";\r\n\r\nimport trashBin from \"../../images/trashBin.svg\";\r\n\r\nfunction History() {\r\n  return (\r\n    <div className=\"c-the_top_bar-middle-search_bar-dropdown-history\">\r\n      <div className=\"c-the_top_bar-middle-search_bar-dropdown-history-header\">\r\n        <h2>搜索历史</h2>\r\n        <img src={trashBin} className=\"c-the_top_bar-middle-search_bar-dropdown-history-header-icon\" />\r\n      </div>\r\n      <div className=\"c-the_top_bar-middle-search_bar-dropdown-history-items\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import _request from '../_request'\r\nimport { HotList } from '../../models/HotList'\r\n\r\n/**\r\n * 获取热门列表\r\n * @returns 热门列表数组\r\n */\r\n\r\nexport async function getHotList(): Promise<HotList[] | null> {\r\n  const res = await _request<{data: HotList[]}>({\r\n    url: '/search/hot/detail',\r\n    method: 'GET',\r\n  })\r\n  if (!res) return null\r\n\treturn res.data\r\n}","import \"./index.scss\";\r\n\r\ntype HotListItemProps = {\r\n  data: {\r\n    content: string;\r\n    score: number;\r\n    searchWord: string;\r\n    iconType: number;\r\n    iconUrl: string | null;\r\n  };\r\n  index: number;\r\n};\r\n\r\nfunction HotListItem(props: HotListItemProps) {\r\n  const HotListItemData = props.data;\r\n  const HotListItemIndex = props.index;\r\n\r\n  return (\r\n    <li className=\"hotlist-item\">\r\n      <div\r\n        className={\r\n          HotListItemIndex < 3\r\n            ? \"hotlist-item-rank top_three\"\r\n            : \"hotlist-item-rank\"\r\n        }\r\n      >\r\n        {HotListItemIndex + 1}\r\n      </div>\r\n      <div className=\"hotlist-item-outer_wrapper\">\r\n        <div className=\"hotlist-item-outer_wrapper-inner_wrapper\">\r\n          <h5 className=\"hotlist-item-outer_wrapper-inner_wrapper-title\">\r\n            {HotListItemData.searchWord}\r\n          </h5>\r\n          {HotListItemData.iconType && HotListItemData.iconUrl ? (\r\n            <img src={HotListItemData.iconUrl} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <span className=\"hotlist-item-outer_wrapper-inner_wrapper-score\">\r\n            {HotListItemData.score}\r\n          </span>\r\n        </div>\r\n        <p className=\"hotlist-item-outer_wrapper-content\">\r\n          {HotListItemData.content}\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default HotListItem;\r\n","import \"./index.scss\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { HotList as HotListData } from \"../../../../models/HotList\";\r\nimport { getHotList } from \"../../../../network/hotList/getHotList\";\r\nimport HotListItem from \"../HotListItem\";\r\n\r\nfunction HotList() {\r\n  const [data, setData] = useState<HotListData[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    getHotList().then((res) => {\r\n      if (res) setData(res);\r\n      else throw \"获取热门列表失败!\";\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"c-the_top_bar-middle-search_bar-dropdown-hotlist_wrapper\">\r\n      <h2>热搜榜</h2>\r\n      <ul className=\"c-the_top_bar-middle-search_bar-dropdown-hotlist_wrapper-hotlist\">\r\n        {data\r\n          ? data.map((item, index) => (\r\n              <HotListItem\r\n                key={item.searchWord + item.score}\r\n                data={item}\r\n                index={index}\r\n              />\r\n            ))\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HotList;\r\n","import './index.scss'\r\n\r\nimport History from '../History'\r\nimport HotList from '../HotList'\r\n\r\nfunction Dropdown() {\r\n  return (\r\n    <div className={'c-the_top_bar-middle-search_bar-dropdown'}>\r\n      <History />\r\n      <HotList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","import './index.scss'\r\n\r\nimport search from '../../images/search.svg'\r\nimport Dropdown from '../Dropdown'\r\nimport { useShowDropDown } from '../../hooks/useShowDropDown'\r\n\r\nfunction SearchBar() {\r\n  const { showDropDown, setShowDropDown } = useShowDropDown()\r\n  return (\r\n    <div\r\n      className=\"c-the_top_bar-middle-search_bar\"\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <input type=\"text\" placeholder=\"搜索\" onFocus={() => {\r\n        setShowDropDown(true)\r\n      }} />\r\n      <img src={search} className=\"icon\" />\r\n      {showDropDown && <Dropdown />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useShowDropDown = () => {\r\n  const [showDropDown, setShowDropDown] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!showDropDown) return\r\n    const closeDropDown = () => {\r\n      setShowDropDown(false)\r\n    }\r\n    document.addEventListener('click', closeDropDown)\r\n    return () => document.removeEventListener('click', closeDropDown)\r\n  }, [showDropDown])\r\n\r\n  return { showDropDown, setShowDropDown }\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ntype Theme = \"light\" | \"dark\";\r\nconst themeKey = \"netease-f_theme\";\r\n\r\n/**\r\n * 头部导航条相关全局状态\r\n */\r\nclass TheTopbarState {\r\n  /** SearchBar*/\r\n  /** 显示搜索下拉框 */\r\n  searchDpShown = false;\r\n\r\n  /** Login */\r\n  /** 显示登录框 */\r\n  loginDpShown = false;\r\n  /** 显示登录Toggle */\r\n  loginTgShown = false;\r\n  /** 是否同意条款 */\r\n  lgTermsAgreed = false;\r\n\r\n  /** Login - DpToggle */\r\n  LDTClassName = \"c-the_top_bar-right-login-dropdown-toggle hidden\";\r\n\r\n  /** 是否切换为暗色主题 */\r\n  theme: Theme = (localStorage.getItem(themeKey) || \"light\") as Theme;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  /**\r\n   * 设置搜索下拉框是否可见\r\n   * @param void\r\n   * @returns void\r\n   */\r\n\r\n  toggleShowSearchDp() {\r\n    this.searchDpShown = !this.searchDpShown;\r\n  }\r\n\r\n  /**\r\n   * 设置登录下拉框是否可见\r\n   * @param void\r\n   * @returns void\r\n   */\r\n\r\n  toggleShowLoginDp() {\r\n    this.loginDpShown = !this.loginDpShown;\r\n  }\r\n\r\n  /**\r\n   * 设置登录Toggle是否可见\r\n   * @param void\r\n   * @returns void\r\n   */\r\n\r\n  toggleShowLoginTg() {\r\n    this.loginTgShown = !this.loginTgShown;\r\n  }\r\n\r\n  /**\r\n   * 设置登录Toggle是否可见\r\n   * @param void\r\n   * @returns void\r\n   */\r\n\r\n  toggleSetAgreed() {\r\n    this.lgTermsAgreed = !this.lgTermsAgreed;\r\n  }\r\n\r\n  /**\r\n   * 设置DpToggle的类名，以决定它是否显示\r\n   * @param void\r\n   * @returns void\r\n   */\r\n\r\n  setLDTClassName(name: string) {\r\n    this.LDTClassName = name;\r\n  }\r\n\r\n  toggleSetTheme() {\r\n    this.theme = this.theme === \"dark\" ? \"light\" : \"dark\";\r\n    localStorage.setItem(themeKey, this.theme);\r\n  }\r\n}\r\n\r\nexport const TheTopbarStore = new TheTopbarState();\r\n","import \"./index.scss\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { TheTopbarStore } from \"../../../../mobx/thetopbar\";\r\n\r\nfunction _PageChanger() {\r\n  const theme = TheTopbarStore.theme;\r\n\r\n  return (\r\n    <div\r\n      className={`c-the_top_bar-right-theme-btn ${\r\n        theme === \"dark\" ? \"open\" : \"\"\r\n      }`}\r\n      onClick={() => TheTopbarStore.toggleSetTheme()}\r\n    >\r\n      <div className=\"c-the_top_bar-right-theme-btn-dot\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PageChanger = observer(_PageChanger);\r\n\r\nexport default PageChanger;\r\n","export default __webpack_public_path__ + \"static/media/user.bf51986b.svg\";","import \"./index.scss\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { SelfStore } from \"../../mobx/self\";\r\nimport Img from \"../Img\";\r\nimport DialogLogin from \"./components/DialogLogin\";\r\nimport Logo from \"./components/Logo/Logo\";\r\nimport PageChanger from \"./components/PageChanger/PageChanger\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport ThemeBtn from \"./components/ThemeBtn/ThemeBtn\";\r\nimport { useShowDialogLogin } from \"./hooks/useShowDialogLogin\";\r\nimport avatarPlaceholder from \"./images/user.svg\";\r\n\r\nfunction _TheTopBar() {\r\n  const { setShowDialogLogin, showDialogLogin } = useShowDialogLogin();\r\n  const self = SelfStore.self;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-the_top_bar\">\r\n        <Logo />\r\n        <div className=\"c-the_top_bar-middle\">\r\n          <PageChanger />\r\n          <SearchBar />\r\n        </div>\r\n        <div className=\"c-the_top_bar-right\">\r\n          <div\r\n            className=\"c-the_top_bar-right-user\"\r\n            onClick={() => {\r\n              if (!self) setShowDialogLogin(true);\r\n              else {\r\n                window.location.href = `/user-detail?uid=${SelfStore.self?.userId}`\r\n              }\r\n            }}\r\n          >\r\n            <Img\r\n              className={\r\n                self\r\n                  ? \"c-the_top_bar-right-user-avatar\"\r\n                  : \"c-the_top_bar-right-user-avatar placeholder\"\r\n              }\r\n              src={self ? self.avatarUrl : avatarPlaceholder}\r\n              alt=\"avatar\"\r\n              loadingMask={false}\r\n            />\r\n            {self ? self.nickname : \"未登录\"}\r\n          </div>\r\n          <ThemeBtn />\r\n        </div>\r\n        {showDialogLogin && (\r\n          <DialogLogin close={() => setShowDialogLogin(false)} />\r\n        )}\r\n      </div>\r\n      <div className=\"c-the_top_bar-placeholder\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst TheTopBar = observer(_TheTopBar);\r\n\r\nexport default TheTopBar;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useShowDialogLogin = () => {\r\n  const [showDialogLogin, setShowDialogLogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!showDialogLogin) return;\r\n    const closeDialog = () => setShowDialogLogin(false);\r\n    document.addEventListener(\"click\", closeDialog);\r\n    return () => document.removeEventListener(\"click\", closeDialog);\r\n  }, [showDialogLogin]);\r\n\r\n  return { showDialogLogin, setShowDialogLogin };\r\n};\r\n","import { UserProfile } from \"../../models/User\";\r\nimport _request from \"../_request\";\r\n\r\nexport type GetUserByCookieReqData = {\r\n  cookie: string;\r\n};\r\n\r\ntype GetUserByCookieResData = {\r\n  profile: UserProfile;\r\n};\r\n\r\n/**\r\n * 通过cookie获取用户信息\r\n * @returns\r\n */\r\nexport async function getUserByCookieReq(data: GetUserByCookieReqData) {\r\n  const cookie = encodeURIComponent(data.cookie);\r\n  const res = await _request<GetUserByCookieResData>({\r\n    url: `/user/account?cookie=${cookie}`,\r\n    method: \"GET\",\r\n  });\r\n\r\n  return res;\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nimport { COOKIE } from \"../constants/localStorageKey\";\r\nimport { SelfStore } from \"../mobx/self\";\r\nimport { getUserByCookieReq } from \"../network/user/getUserByCookie\";\r\n\r\nconst saveSelfInfo = async () => {\r\n  const cookie = window.localStorage.getItem(COOKIE);\r\n  if (!cookie) return;\r\n\r\n  const info = await getUserByCookieReq({ cookie });\r\n  if (!info) return;\r\n\r\n  SelfStore.self = info.profile;\r\n};\r\n\r\nexport const useSelf = () => {\r\n  useEffect(() => {\r\n    saveSelfInfo();\r\n  }, []);\r\n};\r\n","import { RouteProps } from \"react-router-dom\";\r\n\r\nimport loadable from \"@loadable/component\";\r\n\r\nexport const routes: RouteProps[] = [\r\n  {\r\n    path: \"/album-detail\",\r\n    component: loadable(() => import(\"../pages/AlbumDetail\")),\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    component: loadable(() => import(\"../pages/Home\")),\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/music-detail\",\r\n    component: loadable(() => import(\"../pages/MusicDetail\")),\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/search-page\",\r\n    component: loadable(() => import(\"../pages/SearchPage\")),\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/user-detail\",\r\n    component: loadable(() => import(\"../pages/UserDetail\")),\r\n    exact: true,\r\n  },\r\n];\r\n","import \"./App.scss\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport TheAsideBar from \"./components/TheAsideBar\";\r\nimport TheMusicPlayer from \"./components/TheMusicPlayer\";\r\nimport TheToasts from \"./components/TheToasts\";\r\nimport TheTopBar from \"./components/TheTopBar\";\r\nimport { useSelf } from \"./hooks/useSelf\";\r\nimport { TheTopbarStore } from \"./mobx/thetopbar\";\r\nimport { routes } from \"./routes\";\r\n\r\nfunction _App() {\r\n  useSelf();\r\n\r\n  return (\r\n    <div className={`${TheTopbarStore.theme} main`}>\r\n      <div className=\"main-body\">\r\n        <TheToasts></TheToasts>\r\n        <TheTopBar />\r\n        <div className=\"main-body-content\">\r\n          <TheAsideBar />\r\n\r\n          <Switch>\r\n            <Redirect to=\"/home\" path=\"/\" exact></Redirect>\r\n            {routes.map((route, i) => (\r\n              <Route key={i} {...route} />\r\n            ))}\r\n          </Switch>\r\n        </div>\r\n\r\n        <TheMusicPlayer></TheMusicPlayer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst App = observer(_App);\r\n\r\nexport default App;\r\n","import \"./styles/index.scss\";\r\nimport \"./mobx\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","export const COOKIE = \"netease-f-cookie\";\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { setTimeout } from \"timers\";\r\n\r\nimport { Toast } from \"../models/Toast\";\r\nimport { UserProfile } from \"../models/User\";\r\n\r\n/**\r\n * 音乐播放相关全局状态\r\n */\r\nclass ToastsState {\r\n  /** 个人信息 */\r\n  toasts: Toast[] = [];\r\n\r\n  private curId = 0;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  addToast(value: string, severity: Toast[\"severity\"]) {\r\n    const id = this.curId++;\r\n    this.toasts.push({ id, severity, value });\r\n\r\n    setTimeout(() => {\r\n      const toSplice = this.toasts.findIndex((t) => t.id === id);\r\n      this.toasts.splice(toSplice, 1);\r\n    }, 2000);\r\n  }\r\n}\r\n\r\nexport const ToastsStore = new ToastsState();\r\n","type Task<T> = () => Promise<T>;\r\n\r\n/**\r\n * ## 示例\r\n * ```js\r\n   const timeout = (time) =>\r\n     new Promise((resolve) => {\r\n       setTimeout(resolve, time);\r\n     });\r\n \r\n   const scheduler = new Scheduler(2);\r\n   const addTask = (time, order) => {\r\n     scheduler.add(() => timeout(time)).then(() => console.log(order));\r\n   };\r\n \r\n   addTask(1000, \"1\");\r\n   addTask(500, \"2\");\r\n   addTask(300, \"3\");\r\n   addTask(400, \"4\");\r\n \r\n   // output: 2 3 1 4\r\n   // 一开始，1、2两个任务进入队列\r\n   // 500ms时，2完成，输出2，任务3进队\r\n   // 800ms时，3完成，输出3，任务4进队\r\n   // 1000ms时，1完成，输出1\r\n   // 1200ms时，4完成，输出4\r\n * ```\r\n */\r\nexport class Scheduler {\r\n  onGoing = 0; // 正在进行的任务数\r\n  tasks: Task<unknown>[] = []; //  任务队列\r\n  maxTaskCount: number;\r\n\r\n  /** 任务最大并发数 */\r\n  constructor(maxTaskCount: number) {\r\n    this.maxTaskCount = maxTaskCount;\r\n  }\r\n\r\n  add<T>(task: Task<T>) {\r\n    const thisTaskIsDone = new Promise<T>((resolve, reject) => {\r\n      // 返回当前任务完成时才 resolve 的 promise\r\n      this.tasks.push(() =>\r\n        // 推进队列\r\n        task()\r\n          .then(resolve)\r\n          .catch(reject)\r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              this.onGoing--; // 调整进行任务数\r\n              this.executeNext(); // 调用下一个任务\r\n            }, 1);\r\n          })\r\n      );\r\n    });\r\n\r\n    this.executeNext(); // 一开始的时候需要尝试调用一下下一个\r\n\r\n    return thisTaskIsDone; // 1. 返回\r\n  }\r\n\r\n  executeNext() {\r\n    if (this.onGoing >= this.maxTaskCount || this.tasks.length == 0) {\r\n      // 如果正在执行的任务有最大并发数个或者没有后续了就不再继续了\r\n      return;\r\n    }\r\n\r\n    this.onGoing++; // 标记现在又有任务了\r\n\r\n    const fn = this.tasks.splice(0, 1)[0]; // 出队一个任务\r\n    fn(); // 并执行他\r\n  }\r\n}\r\n","/**\r\n * 将秒转化成字符串\r\n * @param time 时间的**秒数**\r\n */\r\nexport function timeFormat(time: number): string {\r\n  const seconds = Math.floor(time % 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n\r\n  const minutes = (Math.floor(time / 60) % 60).toString().padStart(2, \"0\");\r\n\r\n  const hours = Math.floor(time / 3600)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n\r\n  if (hours === \"00\") {\r\n    return `${minutes}:${seconds}`;\r\n  } else {\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n}\r\n","export const cookie =\r\n  \"MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/eapi/feedback;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/api/feedback;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/neapi/clientlog;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/api/feedback;;MUSIC_U=dfb63537bb362fdf9ba6d8198d50f82e5cb77bfaa0f3eda274dcc314e82b0fdf993166e004087dd3d78b6050a17a35e705925a4e6992f61d07c385928f88e8de; Max-Age=1296000; Expires=Mon, 3 Jan 2022 10:16:00 GMT; Path=/;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/weapi/clientlog;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/neapi/feedback;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/openapi/clientlog;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/wapi/clientlog;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/eapi/feedback;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/weapi/feedback;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/wapi/feedback;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/wapi/clientlog;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/weapi/feedback;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/api/clientlog;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/eapi/clientlog;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/weapi/clientlog;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/neapi/feedback;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/openapi/clientlog;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/eapi/clientlog;;__csrf=d28261c074d95c967034bc5f6856d9f3; Max-Age=1296010; Expires=Mon, 3 Jan 2022 10:16:10 GMT; Path=/;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/api/clientlog;;MUSIC_R_T=1455602025369; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/wapi/feedback;;MUSIC_A_T=1455601991915; Max-Age=2147483647; Expires=Fri, 6 Jan 2090 13:30:07 GMT; Path=/neapi/clientlog;;__remember_me=true; Max-Age=1296000; Expires=Mon, 3 Jan 2022 10:16:00 GMT; Path=/;\";\r\n\r\nexport const enCookie = encodeURIComponent(cookie);\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { SelfStore } from \"../../../mobx/self\";\r\nimport { PlayList } from \"../../../models/PlayList\";\r\nimport { getUserPlayListsReq } from \"../../../network/user/getUserPlayLists\";\r\n\r\nexport const useUserPlayLists = () => {\r\n  const [playLists, setPlayLists] = useState<PlayList[]>([]);\r\n\r\n  const self = SelfStore.self;\r\n\r\n  const createPlayLists: PlayList[] = self\r\n    ? playLists.filter((list) => list.userId === self.userId)\r\n    : [];\r\n  const starPlayLists: PlayList[] = self\r\n    ? playLists.filter((list) => list.userId !== self.userId)\r\n    : [];\r\n\r\n  const getUserPlayLists = async () => {\r\n    const self = SelfStore.self;\r\n    if (!self) return;\r\n    const playLists = await getUserPlayListsReq({ uid: self.userId });\r\n    if (!playLists) return;\r\n    setPlayLists(playLists.playlist);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserPlayLists();\r\n  }, [self]);\r\n\r\n  return { createPlayLists, starPlayLists };\r\n};\r\n","import { PlayList } from \"../../models/PlayList\";\r\nimport { Scheduler } from \"../../utils/scheduler\";\r\nimport _request from \"../_request\";\r\n\r\nexport type GetUserPlayListsReqData = {\r\n  uid: number;\r\n  limit?: number;\r\n  offset?: number;\r\n};\r\n\r\n/**\r\n * 获取用户创建和收藏的歌单\r\n * @returns\r\n */\r\nexport async function getUserPlayListsReq(params: GetUserPlayListsReqData) {\r\n  return scheduler.add(() => _getUserPlayListsReq(params));\r\n}\r\n\r\nasync function _getUserPlayListsReq(params: GetUserPlayListsReqData) {\r\n  const res = await _request<{ playlist: PlayList[] }>({\r\n    url: `/user/playlist`,\r\n    method: \"GET\",\r\n    params: { ...params, limit: params.limit || 999 }, // 不是，就他那奇怪的接口还分页？\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nconst scheduler = new Scheduler(1);\r\n","import _request from \"../_request\";\r\nimport { MusicDetail } from \"../../models/Music\";\r\n\r\nexport type PopulateTracksReqData = {\r\n  ids: number[];\r\n};\r\n\r\n/** 避免 url 过长要将 id 分片, 此为每片长度 */\r\nconst BATCH_SIZE = 777;\r\n\r\n/**\r\n * 根据给定 id 数组获得这批音乐的详情(不包含 url)\r\n * @returns 详情数组\r\n */\r\nexport async function populateTracksReq({ ids }: PopulateTracksReqData) {\r\n  const idBatches: number[][] = [];\r\n  for (let i = 0; i * BATCH_SIZE < ids.length; i++) {\r\n    idBatches.push(ids.slice(i * BATCH_SIZE, (i + 1) * BATCH_SIZE));\r\n  }\r\n  const promises = idBatches.map((idBatch) =>\r\n    _request<{ songs: MusicDetail[] }>({\r\n      url: \"/song/detail\",\r\n      method: \"GET\",\r\n      params: {\r\n        ids: idBatch.join(\",\"),\r\n      },\r\n    })\r\n  );\r\n\r\n  try {\r\n    const results = await Promise.all(promises);\r\n    let returnArr: MusicDetail[] = [];\r\n    for (const res of results) {\r\n      if (!res || !res.songs) throw \"error\";\r\n      returnArr = [...returnArr, ...res.songs];\r\n    }\r\n\r\n    return returnArr;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n","import { populateTracksReq } from \"./populateTracks\";\r\nimport _request from \"../_request\";\r\nimport { PlayList } from \"../../models/PlayList\";\r\nimport { enCookie } from \"../../constants/cookie\";\r\n\r\nexport type GetPlayListReqData = {\r\n  /** 要获取的歌单的 id */\r\n  id: number;\r\n};\r\n\r\n/**\r\n * 获取歌单详细信息(已进行填充)\r\n * @returns 有歌曲详情的歌单\r\n */\r\nexport async function getPlayListReq(\r\n  params: GetPlayListReqData\r\n): Promise<PlayList<true> | null> {\r\n  const res = await _request<{ playlist: PlayList }>({\r\n    url: \"/playlist/detail\",\r\n    method: \"GET\",\r\n    params: { ...params, cookie: enCookie },\r\n  });\r\n\r\n  if (!res || !res.playlist) return null;\r\n\r\n  const tracks = await populateTracksReq({\r\n    ids: res.playlist.trackIds.map((t) => t.id),\r\n  });\r\n\r\n  if (!tracks) return null;\r\n\r\n  const playListFull = res.playlist as unknown as PlayList<true>;\r\n\r\n  playListFull.trackIds = tracks;\r\n\r\n  return playListFull;\r\n}\r\n"],"sourceRoot":""}
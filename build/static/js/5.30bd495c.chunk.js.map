{"version":3,"sources":["hooks/useQuery.ts","network/user/getUser.ts","mobx/user.ts","pages/UserDetail/components/BasicInfo/components/Main/index.tsx","pages/UserDetail/components/BasicInfo/index.tsx","pages/UserDetail/components/SongList/components/PageChanger/index.tsx","pages/UserDetail/components/SongList/components/ListItem/index.tsx","pages/UserDetail/components/SongList/components/CreatedList/index.tsx","pages/UserDetail/components/SongList/components/SubscribedList/index.tsx","pages/UserDetail/components/SongList/index.tsx","pages/UserDetail/index.tsx"],"names":["useQuery","search","useLocation","useMemo","URLSearch","URLSearchParams","get","key","toString","getUser","params","a","_request","url","method","cookie","enCookie","res","userState","uid","userProfile","level","songList","createdSongList","subscribedSongList","showIndex","makeAutoObservable","this","userData","showToast","getUserPlayListsReq","userSongListData","profile","playlist","filter","item","creator","userId","index","userStore","Main","observer","className","nickname","eventCount","follows","followeds","signature","BasicInfo","src","avatarUrl","PageChanger","onClick","setShowIndex","ListItem","props","window","location","href","id","coverImgUrl","name","trackCount","CreatedList","length","map","Subscribed","SongList","UserDetail","useEffect","setUser","parseInt"],"mappings":"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","file":"static/js/5.30bd495c.chunk.js","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport function useQuery<T extends Record<string, string>>() {\r\n  const { search } = useLocation();\r\n\r\n  return useMemo(() => {\r\n    const URLSearch = new URLSearchParams(search);\r\n    return {\r\n      get<K extends keyof T>(key: K) {\r\n        return URLSearch.get(key.toString()) as T[K];\r\n      },\r\n    };\r\n  }, [search]);\r\n}\r\n","import _request from '../_request'\r\nimport { User } from '../../models/User'\r\nimport { enCookie } from \"../../constants/cookie\";\r\n\r\n/**\r\n * 获取热门列表\r\n * @returns 热门列表数组\r\n */\r\n\r\nexport type GetUserReqData = {\r\n\t/** 用户的 id */\r\n\tuid: number\r\n}\r\n\r\nexport async function getUser(\r\n\tparams: GetUserReqData\r\n): Promise<User | null> {\r\n\tconst res = await _request<User>({\r\n\t\turl: '/user/detail',\r\n\t\tmethod: 'GET',\r\n    params: { ...params, cookie: enCookie },\r\n\t})\r\n\tif (!res) return null\r\n\treturn res\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nimport { PlayList } from \"../models/PlayList\";\r\nimport { UserProfile } from \"../models/User\";\r\nimport { getUser } from \"../network/user/getUser\";\r\nimport { getUserPlayListsReq } from \"../network/user/getUserPlayLists\";\r\nimport { showToast } from \"../utils/showToast\";\r\n\r\n/**\r\n * 用户详情页相关状态\r\n */\r\n\r\nclass userState {\r\n  uid = 32953014;\r\n  userProfile: UserProfile | null = null;\r\n  // 用户等级\r\n  level = 0;\r\n  // 用户的歌单总数据\r\n  songList: PlayList[] = [];\r\n  // 创建的歌单\r\n  createdSongList: PlayList[] = [];\r\n  // 收藏的歌单\r\n  subscribedSongList: PlayList[] = [];\r\n  // 显示的是创建的歌单/收藏的歌单\r\n  showIndex: 0 | 1 = 0;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  /**\r\n   * 设置用户信息\r\n   * @param uid 用户id\r\n   * @returns void\r\n   */\r\n  async setUser(uid: number) {\r\n    this.uid = uid;\r\n    const userData = await getUser({\r\n      uid,\r\n    });\r\n    if (!userData) return showToast(\"加载用户失败，请重试\", \"error\");\r\n\r\n    const userSongListData = await getUserPlayListsReq({\r\n      uid,\r\n    });\r\n    if (!userSongListData)\r\n      return showToast(\"加载用户歌单失败，请重试\", \"error\");\r\n\r\n    this.userProfile = userData.profile;\r\n    this.level = userData.level;\r\n    this.songList = userSongListData.playlist;\r\n\r\n    this.createdSongList = this.songList.filter(\r\n      (item) => item.creator.userId === this.userProfile?.userId\r\n    );\r\n    this.subscribedSongList = this.songList.filter(\r\n      (item) => item.creator.userId !== this.userProfile?.userId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 设置当前显示的是创建的歌单/收藏的歌单\r\n   * @param index 序号\r\n   * @returns void\r\n   */\r\n  setShowIndex(index: 0 | 1) {\r\n    this.showIndex = index;\r\n  }\r\n}\r\n\r\nexport const userStore = new userState();\r\n","import './index.scss'\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport { userStore } from '../../../../../../mobx/user'\r\n\r\nfunction _Main() {\r\n  return (\r\n    <div className=\"user_detail-basic_info-main\">\r\n      <div className=\"user_detail-basic_info-main-upper\">\r\n        <h2 className=\"user_detail-basic_info-main-upper-nickname\">\r\n          {userStore.userProfile?.nickname}\r\n        </h2>\r\n        <span className=\"user_detail-basic_info-main-upper-level\">\r\n          Lv{userStore.level}\r\n        </span>\r\n      </div>\r\n      <div className=\"user_detail-basic_info-main-bottom\">\r\n        <div className=\"user_detail-basic_info-main-bottom-count\">\r\n          <div className=\"user_detail-basic_info-main-bottom-count-item\">\r\n            {userStore.userProfile?.eventCount}\r\n            <span className=\"user_detail-basic_info-main-bottom-count-item-text\">\r\n              动态\r\n            </span>\r\n          </div>\r\n          <div className=\"user_detail-basic_info-main-bottom-count-item\">\r\n            {userStore.userProfile?.follows}\r\n            <span className=\"user_detail-basic_info-main-bottom-count-item-text\">\r\n              关注\r\n            </span>\r\n          </div>\r\n          <div className=\"user_detail-basic_info-main-bottom-count-item\">\r\n            {userStore.userProfile?.followeds}\r\n            <span className=\"user_detail-basic_info-main-bottom-count-item-text\">\r\n              粉丝\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"user_detail-basic_info-main-bottom-other_info\">\r\n          <div className=\"user_detail-basic_info-main-bottom-other_info-item\">\r\n            <span className=\"user_detail-basic_info-main-bottom-other_info-item-text\">\r\n              个人介绍：\r\n            </span>\r\n            {userStore.userProfile?.signature}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Main = observer(_Main)\r\n\r\nexport default Main\r\n","import './index.scss'\r\n\r\nimport Main from './components/Main'\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport { userStore } from '../../../../mobx/user'\r\n\r\nfunction _BasicInfo() {\r\n  return (\r\n    <div className=\"user_detail-basic_info\">\r\n      <img\r\n        src={userStore.userProfile?.avatarUrl}\r\n        className=\"user_detail-basic_info-avatar\"\r\n      />\r\n      <Main />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst BasicInfo = observer(_BasicInfo)\r\n\r\nexport default BasicInfo\r\n","import './index.scss'\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport { userStore } from '../../../../../../mobx/user'\r\n\r\nfunction _PageChanger() {\r\n  return (\r\n    <div className=\"user_detail-song_list-page_changer\">\r\n      <div\r\n        className={\r\n          !userStore.showIndex\r\n            ? 'user_detail-song_list-page_changer-item selected'\r\n            : 'user_detail-song_list-page_changer-item'\r\n        }\r\n        onClick={() => {\r\n          userStore.setShowIndex(0)\r\n        }}\r\n      >\r\n        创建的歌单\r\n      </div>\r\n      <div\r\n        className={\r\n          userStore.showIndex\r\n            ? 'user_detail-song_list-page_changer-item selected'\r\n            : 'user_detail-song_list-page_changer-item'\r\n        }\r\n        onClick={() => {\r\n          userStore.setShowIndex(1)\r\n        }}\r\n      >\r\n        收藏的歌单\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PageChanger = observer(_PageChanger)\r\n\r\nexport default PageChanger\r\n","import './index.scss'\r\n\r\nimport { PlayList } from '../../../../../../models/PlayList'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\ntype ListItemProps = {\r\n  songList: PlayList\r\n}\r\n\r\nfunction _ListItem(props: ListItemProps) {\r\n  return (\r\n    <div className=\"user_detail-song_list-created_list-item\" onClick={() => {\r\n      window.location.href = `/album-detail?id=${props.songList.id}`\r\n    }}>\r\n      <img\r\n        src={props.songList.coverImgUrl}\r\n        className=\"user_detail-song_list-created_list-item-cover_img\"\r\n      />\r\n      <div className=\"user_detail-song_list-created_list-item-name\">\r\n        {props.songList.name}\r\n      </div>\r\n      <span className=\"user_detail-song_list-created_list-item-count\">\r\n        {props.songList.trackCount}首\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ListItem = observer(_ListItem)\r\n\r\nexport default ListItem\r\n","import './index.scss'\r\n\r\nimport ListItem from '../ListItem'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { userStore } from '../../../../../../mobx/user'\r\n\r\nfunction _CreatedList() {\r\n  return (\r\n    <div className=\"user_detail-song_list-created_list\">\r\n      {userStore.createdSongList.length\r\n        ? userStore.createdSongList.map(item => <ListItem songList={item}/>)\r\n        : ''}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CreatedList = observer(_CreatedList)\r\n\r\nexport default CreatedList\r\n","import './index.scss'\r\n\r\nimport ListItem from '../ListItem'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { userStore } from '../../../../../../mobx/user'\r\n\r\nfunction _Subscribed() {\r\n  return (\r\n    <div className=\"user_detail-song_list-subscribed_list\">\r\n      {userStore.subscribedSongList.length\r\n        ? userStore.subscribedSongList.map(item => <ListItem songList={item}/>)\r\n        : ''}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Subscribed = observer(_Subscribed)\r\n\r\nexport default Subscribed\r\n","import './index.scss'\r\n\r\nimport PageChanger from './components/PageChanger'\r\nimport CreatedList from './components/CreatedList'\r\nimport SubscribedList from './components/SubscribedList'\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport { userStore } from '../../../../mobx/user'\r\n\r\nfunction _SongList() {\r\n  return (\r\n    <div className=\"user_detail-song_list\">\r\n      <PageChanger />\r\n      {!userStore.showIndex ? <CreatedList /> : <SubscribedList />}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SongList = observer(_SongList)\r\n\r\nexport default SongList\r\n","import './index.scss'\r\n\r\nimport BasicInfo from './components/BasicInfo'\r\nimport SongList from './components/SongList'\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useEffect } from 'react'\r\nimport { userStore } from '../../mobx/user'\r\nimport { useQuery } from '../../hooks/useQuery'\r\n\r\nfunction _UserDetail() {\r\n  const { get } = useQuery<{ uid: string }>()\r\n\r\n  useEffect(() => {\r\n    userStore.setUser(parseInt(get('uid')))\r\n  }, [get('uid')])\r\n\r\n  return (\r\n    <div className=\"user_detail\">\r\n      <BasicInfo />\r\n      <SongList />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UserDetail = observer(_UserDetail)\r\n\r\nexport default UserDetail\r\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/useQuery.ts","components/Pager/index.tsx","components/Pager/utils/computePage.ts","components/PlayList/index.tsx","components/UserItem/img/man.svg","components/UserItem/img/woman.svg","components/UserItem/index.tsx","constants/search.ts","network/search/searchByKeywords.ts","pages/SearchPage/hooks/useSearchMusic.ts","pages/SearchPage/index.tsx","pages/SearchPage/hooks/useSearchPlayLists.ts","pages/SearchPage/hooks/useSearchUser.ts"],"names":["useQuery","search","useLocation","useMemo","URLSearch","URLSearchParams","get","key","toString","Pager","props","total","curPage","page","setPage","totalPage","pages","Math","ceil","Array","from","length","_","i","className","onClick","map","c","PlayList","coverImgUrl","creator","id","trackCount","name","history","useHistory","push","Img","src","alt","nickname","UserItem","avatarUrl","gender","signature","userId","avatarDetail","description","style","backgroundImage","identityIconUrl","manIcon","womanIcon","loadingMask","SearchType","searchByKeywordsReq","params","a","_request","url","method","res","tabs","SearchPage","query","keywords","tab","useState","_setPage","searchProps","songCount","songs","searchRes","setSearchRes","searchMusic","limit","offset","type","result","useEffect","useSearchMusic","playlistCount","playlists","searchPlayLists","console","log","useSearchPlayLists","userprofileCount","userprofiles","searchUsers","useSearchUsers","top","useRef","totalCount","ref","tabItem","replace","SongsList","tableHeads","highlightWord","tableContents","songsInfoFormat","indexed","list","user","newPage","current","scrollIntoView"],"mappings":"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","file":"static/js/7.e963ec4c.chunk.js","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport function useQuery<T extends Record<string, string>>() {\r\n  const { search } = useLocation();\r\n\r\n  return useMemo(() => {\r\n    const URLSearch = new URLSearchParams(search);\r\n    return {\r\n      get<K extends keyof T>(key: K) {\r\n        return URLSearch.get(key.toString()) as T[K];\r\n      },\r\n    };\r\n  }, [search]);\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { computePage } from \"./utils/computePage\";\r\n\r\ntype PagerProps = {\r\n  page: number;\r\n  setPage: (newPage: number) => void;\r\n  totalPage: number;\r\n};\r\n\r\nfunction Pager(props: PagerProps) {\r\n  const { page, setPage, totalPage } = props;\r\n\r\n  const pages = computePage(totalPage, page);\r\n\r\n  if (totalPage < 2) return null;\r\n\r\n  return (\r\n    <div className=\"c-pager\">\r\n      <div\r\n        className={`c-pager-prev c-pager-item ${page === 1 ? \"disabled\" : \"\"}`}\r\n        onClick={() => setPage(page - 1)}\r\n      >\r\n        {\"<\"}\r\n      </div>\r\n\r\n      {pages.map((c, i) => (\r\n        <div\r\n          key={i}\r\n          className={`c-pager-item ${c === page ? \"active\" : \"\"}`}\r\n          onClick={() => c !== \"...\" && setPage(c)}\r\n        >\r\n          {c}\r\n        </div>\r\n      ))}\r\n\r\n      <div\r\n        className={`c-pager-next c-pager-item ${\r\n          page === Math.ceil(totalPage) ? \"disabled\" : \"\"\r\n        }`}\r\n        onClick={() => setPage(page + 1)}\r\n      >\r\n        {\">\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pager;\r\n","export type HideChar = \"...\";\r\n\r\nexport function computePage(\r\n  total: number,\r\n  curPage: number\r\n): (HideChar | number)[] {\r\n  total = Math.ceil(total);\r\n\r\n  if (total < 11) return Array.from({ length: total }, (_, i) => i + 1);\r\n\r\n  if (curPage <= 8) return [1, 2, 3, 4, 5, 6, 7, 8, 9, \"...\", total];\r\n  if (curPage >= total - 8)\r\n    return [\r\n      1,\r\n      \"...\",\r\n      total - 9,\r\n      total - 8,\r\n      total - 7,\r\n      total - 6,\r\n      total - 5,\r\n      total - 4,\r\n      total - 3,\r\n      total - 2,\r\n      total - 1,\r\n      total,\r\n    ];\r\n\r\n  return [\r\n    1,\r\n    \"...\",\r\n    ...Array.from({ length: 7 }, (_, i) => curPage - 3 + i),\r\n    \"...\",\r\n    total,\r\n  ];\r\n}\r\n","import \"./index.scss\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { PlayList as PlayListDef } from \"../../models/PlayList\";\r\nimport Img from \"../Img\";\r\n\r\ntype PlayListProps = Pick<\r\n  PlayListDef,\r\n  \"id\" | \"coverImgUrl\" | \"trackCount\" | \"creator\" | \"name\"\r\n>;\r\n\r\nexport default function PlayList(props: PlayListProps) {\r\n  const { coverImgUrl, creator, id, trackCount, name } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      className=\"play_list\"\r\n      onClick={() => history.push(`/album-detail?id=${id}`)}\r\n    >\r\n      <Img src={coverImgUrl} alt=\"封面\" className=\"play_list-cover\" />\r\n      <div className=\"play_list-name ellipsis\">{name}</div>\r\n      <div className=\"play_list-count ellipsis\">{trackCount}首</div>\r\n      <div className=\"play_list-creator ellipsis\">\r\n        <span className=\"play_list-creator-by\">by</span>\r\n        {creator.nickname}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/man.773f18c0.svg\";","export default __webpack_public_path__ + \"static/media/woman.9cc27295.svg\";","import \"./index.scss\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserProfile } from \"../../models/User\";\r\nimport Img from \"../Img\";\r\nimport manIcon from \"./img/man.svg\";\r\nimport womanIcon from \"./img/woman.svg\";\r\n\r\ntype UserItemProps = Pick<\r\n  UserProfile,\r\n  \"avatarUrl\" | \"userId\" | \"nickname\" | \"gender\" | \"signature\" | \"description\"\r\n> & {\r\n  avatarDetail?: {\r\n    identityIconUrl: string;\r\n  };\r\n};\r\n\r\nexport default function UserItem(props: UserItemProps) {\r\n  const {\r\n    avatarUrl,\r\n    gender,\r\n    nickname,\r\n    signature,\r\n    userId,\r\n    avatarDetail,\r\n    description,\r\n  } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      className=\"user_item\"\r\n      onClick={() => history.push(`/user-detail?uid=${userId}`)}\r\n    >\r\n      <div className=\"user_item-avatar\">\r\n        <Img src={avatarUrl} alt=\"avatar\" className=\"user_item-avatar-img\" />\r\n        {avatarDetail && (\r\n          <div\r\n            className=\"user_item-avatar-identify_icon\"\r\n            style={{ backgroundImage: `url(${avatarDetail.identityIconUrl})` }}\r\n          ></div>\r\n        )}\r\n      </div>\r\n      <div className=\"user_item-name\">{nickname}</div>\r\n      {gender && (\r\n        <div\r\n          className={\"user_item-gender\" + (gender === 1 ? \" man\" : \" woman\")}\r\n        >\r\n          <Img\r\n            src={gender === 1 ? manIcon : womanIcon}\r\n            alt={gender === 1 ? \"男\" : \"女\"}\r\n            className=\"user_item-gender-icon\"\r\n            loadingMask={false}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"spacer\"></div>\r\n      <div className=\"user_item-signature ellipsis\">\r\n        {avatarDetail ? description || \"网易音乐人\" : signature}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const KEYWORDS = \"keywords\" as const;\r\n","import { MusicDetail } from \"../../models/Music\";\r\nimport { PlayList } from \"../../models/PlayList\";\r\nimport { UserProfile } from \"../../models/User\";\r\nimport _request from \"../_request\";\r\n\r\nexport enum SearchType {\r\n  \"单曲\" = 1,\r\n  // \"专辑\" = 10,\r\n  // \"歌手\" = 100,\r\n  \"歌单\" = 1000,\r\n  \"用户\" = 1002,\r\n}\r\n\r\nexport type SearchByKeywordsReqData<T extends SearchType> = {\r\n  /** 搜索关键词 */\r\n  keywords: string;\r\n  /** 返回数量 */\r\n  limit?: number;\r\n  /** 偏移量，页数 * limit */\r\n  offset?: number;\r\n  /**\r\n   * 搜索类型；默认为 1 即单曲\r\n   * 取值意义 : 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户,\r\n   * 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频, 1018:综合\r\n   */\r\n  type?: T;\r\n};\r\n\r\nexport type SearchRes<T extends SearchType> = {\r\n  result: T extends SearchType.单曲\r\n    ? {\r\n        songs: MusicDetail[];\r\n        songCount: number;\r\n      }\r\n    : T extends SearchType.歌单\r\n    ? {\r\n        playlists: PlayList[];\r\n        playlistCount: number;\r\n      }\r\n    : {\r\n        userprofiles: (UserProfile & {\r\n          avatarDetail: { identityIconUrl: string };\r\n        })[];\r\n        userprofileCount: number;\r\n      };\r\n};\r\n\r\nexport /**\r\n * 根据关键词搜索\r\n * @returns\r\n */\r\nasync function searchByKeywordsReq<T extends SearchType>(\r\n  params: SearchByKeywordsReqData<T>\r\n) {\r\n  const res = await _request<SearchRes<T>>({\r\n    url: \"/cloudsearch\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n\r\n  return res;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n    searchByKeywordsReq, SearchRes, SearchType\r\n} from \"../../../network/search/searchByKeywords\";\r\n\r\ntype UseSearchMusicProps = {\r\n  tab: keyof typeof SearchType;\r\n  keywords: string;\r\n  page: number;\r\n};\r\n\r\nconst LIMIT = 100;\r\n\r\nexport const useSearchMusic = (props: UseSearchMusicProps) => {\r\n  const { tab, keywords, page } = props;\r\n\r\n  const [searchRes, setSearchRes] = useState<\r\n    SearchRes<SearchType.单曲>[\"result\"]\r\n  >({\r\n    songCount: 0,\r\n    songs: [],\r\n  });\r\n\r\n  const searchMusic = async () => {\r\n    if (tab !== \"单曲\") return;\r\n    const res = await searchByKeywordsReq({\r\n      keywords,\r\n      limit: LIMIT,\r\n      offset: LIMIT * (page - 1),\r\n      type: SearchType[tab],\r\n    });\r\n    if (!res) return;\r\n    setSearchRes(res.result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchMusic();\r\n  }, [tab, keywords, page]);\r\n\r\n  return { songs: searchRes.songs, songCount: searchRes.songCount };\r\n};\r\n","import \"./index.scss\";\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Pager from \"../../components/Pager\";\r\nimport PlayList from \"../../components/PlayList\";\r\nimport SongsList from \"../../components/SongsList\";\r\nimport UserItem from \"../../components/UserItem\";\r\nimport { KEYWORDS } from \"../../constants/search\";\r\nimport { useQuery } from \"../../hooks/useQuery\";\r\nimport { SearchType } from \"../../network/search/searchByKeywords\";\r\nimport { songsInfoFormat } from \"../../utils/songsInfoFormat\";\r\nimport { useSearchMusic } from \"./hooks/useSearchMusic\";\r\nimport { useSearchPlayLists } from \"./hooks/useSearchPlayLists\";\r\nimport { useSearchUsers } from \"./hooks/useSearchUser\";\r\n\r\ntype Query = {\r\n  [KEYWORDS]: string;\r\n  tab: keyof typeof SearchType;\r\n};\r\n\r\nconst tabs = [\"单曲\", \"歌单\", \"用户\"];\r\n\r\nfunction SearchPage() {\r\n  const query = useQuery<Query>();\r\n  const keywords = query.get(KEYWORDS);\r\n  const tab = query.get(\"tab\") || \"单曲\";\r\n  const [page, _setPage] = useState(1);\r\n\r\n  const history = useHistory();\r\n\r\n  const searchProps = { tab, keywords, page };\r\n\r\n  const { songCount, songs } = useSearchMusic(searchProps);\r\n  const { playlistCount, playlists } = useSearchPlayLists(searchProps);\r\n  const { userprofileCount, userprofiles } = useSearchUsers(searchProps);\r\n\r\n  const top = useRef<HTMLDivElement>(null);\r\n\r\n  const setPage = (newPage: number) => {\r\n    if (top && top.current) top.current.scrollIntoView();\r\n    _setPage(newPage);\r\n  };\r\n\r\n  const totalCount = {\r\n    [tabs[0]]: songCount,\r\n    [tabs[1]]: playlistCount,\r\n    [tabs[2]]: userprofileCount,\r\n  };\r\n\r\n  return (\r\n    <div className=\"search_page\">\r\n      <div className=\"search_page-count\" ref={top}>\r\n        找到{totalCount[tab]}个{tab}\r\n      </div>\r\n      <div className=\"search_page-tabs\">\r\n        {tabs.map((tabItem) => (\r\n          <div\r\n            key={tabItem}\r\n            className={\r\n              \"search_page-tabs-tab\" + (tabItem === tab ? \" selected\" : \"\")\r\n            }\r\n            onClick={() =>\r\n              history.replace(\r\n                `/search-page?tab=${tabItem}&keywords=${keywords}`\r\n              )\r\n            }\r\n          >\r\n            {tabItem}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {tab === \"单曲\" && (\r\n        <SongsList\r\n          tableHeads={[\"音乐标题\", \"歌手\", \"专辑\", \"时长\"]}\r\n          highlightWord={keywords}\r\n          tableContents={songsInfoFormat(songs)}\r\n          indexed\r\n        />\r\n      )}\r\n      {tab === \"歌单\" &&\r\n        playlists.map((list) => <PlayList {...list} key={list.id} />)}\r\n      {tab === \"用户\" &&\r\n        userprofiles.map((user) => <UserItem {...user} key={user.userId} />)}\r\n      <Pager\r\n        page={page}\r\n        setPage={setPage}\r\n        totalPage={Math.ceil(totalCount[tab] / 100)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n    searchByKeywordsReq, SearchRes, SearchType\r\n} from \"../../../network/search/searchByKeywords\";\r\n\r\ntype UseSearchPlayListsProps = {\r\n  tab: keyof typeof SearchType;\r\n  keywords: string;\r\n  page: number;\r\n};\r\n\r\nconst LIMIT = 20;\r\n\r\nexport const useSearchPlayLists = (props: UseSearchPlayListsProps) => {\r\n  const { tab, keywords, page } = props;\r\n\r\n  const [searchRes, setSearchRes] = useState<\r\n    SearchRes<SearchType.歌单>[\"result\"]\r\n  >({\r\n    playlistCount: 0,\r\n    playlists: [],\r\n  });\r\n\r\n  const searchPlayLists = async () => {\r\n    if (tab !== \"歌单\") return;\r\n    console.log({ keywords });\r\n\r\n    const res = await searchByKeywordsReq({\r\n      keywords,\r\n      limit: LIMIT,\r\n      offset: LIMIT * (page - 1),\r\n      type: SearchType[tab],\r\n    });\r\n    if (!res) return;\r\n    setSearchRes(res.result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchPlayLists();\r\n  }, [tab, keywords, page]);\r\n\r\n  return { ...searchRes };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n    searchByKeywordsReq, SearchRes, SearchType\r\n} from \"../../../network/search/searchByKeywords\";\r\n\r\ntype UseSearchUsersProps = {\r\n  tab: keyof typeof SearchType;\r\n  keywords: string;\r\n  page: number;\r\n};\r\n\r\nconst LIMIT = 20;\r\n\r\nexport const useSearchUsers = (props: UseSearchUsersProps) => {\r\n  const { tab, keywords, page } = props;\r\n\r\n  const [searchRes, setSearchRes] = useState<\r\n    SearchRes<SearchType.用户>[\"result\"]\r\n  >({\r\n    userprofileCount: 0,\r\n    userprofiles: [],\r\n  });\r\n\r\n  const searchUsers = async () => {\r\n    if (tab !== \"用户\") return;\r\n    const res = await searchByKeywordsReq({\r\n      keywords,\r\n      limit: LIMIT,\r\n      offset: LIMIT * (page - 1),\r\n      type: SearchType[tab],\r\n    });\r\n    if (!res) return;\r\n    setSearchRes(res.result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchUsers();\r\n  }, [tab, keywords, page]);\r\n\r\n  return { ...searchRes };\r\n};\r\n"],"sourceRoot":""}